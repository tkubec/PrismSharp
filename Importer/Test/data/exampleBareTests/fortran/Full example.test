MODULE MOD1
TYPE INITIALIZED_TYPE
	INTEGER :: I = 1 ! Default initialization
END TYPE INITIALIZED_TYPE
SAVE :: SAVED1, SAVED2
INTEGER :: SAVED1, UNSAVED1
TYPE(INITIALIZED_TYPE) :: SAVED2, UNSAVED2
ALLOCATABLE :: SAVED1(:), SAVED2(:), UNSAVED1(:), UNSAVED2(:)
END MODULE MOD1

PROGRAM MAIN
CALL SUB1 ! The values returned by the ALLOCATED intrinsic calls
          ! in the PRINT statement are:
          ! .FALSE., .FALSE., .FALSE., and .FALSE.
          ! Module MOD1 is used, and its variables are allocated.
          ! After return from the subroutine, whether the variables
          ! which were not specified with the SAVE attribute
          ! retain their allocation status is processor dependent.
CALL SUB1 ! The values returned by the first two ALLOCATED intrinsic
	      ! calls in the PRINT statement are:
	      ! .TRUE., .TRUE.
	      ! The values returned by the second two ALLOCATED
	      ! intrinsic calls in the PRINT statement are
	      ! processor dependent and each could be either
	      ! .TRUE. or .FALSE.
CONTAINS
	SUBROUTINE SUB1
	USE MOD1 ! Brings in saved and not saved variables.
	PRINT *, ALLOCATED(SAVED1), ALLOCATED(SAVED2), &
	         ALLOCATED(UNSAVED1), ALLOCATED(UNSAVED2)
	IF (.NOT. ALLOCATED(SAVED1)) ALLOCATE(SAVED1(10))
	IF (.NOT. ALLOCATED(SAVED2)) ALLOCATE(SAVED2(10))
	IF (.NOT. ALLOCATED(UNSAVED1)) ALLOCATE(UNSAVED1(10))
	IF (.NOT. ALLOCATED(UNSAVED2)) ALLOCATE(UNSAVED2(10))
	END SUBROUTINE SUB1
END PROGRAM MAIN

--------------------------------------------------

