c =====================Begin Identity Section===================================================
c 
c Mnemonic input method for Amharic script on US-QWERTY
c keyboards for Keyman version 7.1, compliant with Unicode 4.1 and later.
c 

store(&amp;VERSION) '9.0'
store(&amp;Name) "Amharic"
c store(&amp;MnemonicLayout) "1"
store(&amp;CapsAlwaysOff) "1"
store(&amp;Copyright) "Creative Commons Attribution 3.0"
store(&amp;Message) "This is an Amharic language mnemonic input method for Ethiopic script that requires Unicode 4.1 support."
store(&amp;WINDOWSLANGUAGES) 'x045E x045E'
store(&amp;LANGUAGE) 'x045E'
store(&amp;EthnologueCode) "amh"
store(&amp;VISUALKEYBOARD) 'gff-amh-7.kvk'
store(&amp;KMW_EMBEDCSS) 'gff-amh-7.css'
HOTKEY "^%A"
c 
c =====================End Identity Section=====================================================

c =====================Begin Data Section=======================================================

c ---------------------Maps for Numbers---------------------------------------------------------
store(ArabOnes) '23456789'
store(ones)     'áŤŞáŤ«áŤ¬áŤ­áŤ®áŤŻáŤ°áŤ±'
store(tens)     'áŤłáŤ´áŤµáŤ¶áŤ·áŤ¸áŤąáŤş'
store(arabNumbers) '123456789'
store(ethNumbers) 'áŤ©áŤŞáŤ«áŤ¬áŤ­áŤ®áŤŻáŤ°áŤ±áŤ˛áŤłáŤ´áŤµáŤ¶áŤ·áŤ¸áŤąáŤşáŤ»áŤĽ'
store(arabNumbersWithZero) '0123456789'
store(ColonOrComma) ':,'
store(ethWordspaceOrComma) 'áŤˇáŤŁ'
c ---------------------End Numbers--------------------------------------------------------------

c =====================End Data Section=========================================================

c =====================Begin Functional Section=================================================
c 
store(&amp;LAYOUTFILE) 'gff-amh-7_layout.js'
store(&amp;BITMAP) 'amharic.bmp'
store(&amp;TARGETS) 'any windows'
begin Unicode > use(main)
group(main) using keys    

c ---------------------Input of Numbers---------------------------------------------------------

c Special Rule for Arabic Numerals
c 
c The following attempts to auto-correct the use of Ethiopic wordspace and
c Ethiopic comma within an Arabic numeral context.  Ethiopic wordspace gets
c used erroneously in time formats and Ethiopic commas as an order of thousands
c delimiter. The correction context is not known until numerals appear on _both_
c sides of the punctuation.
c 
  any(arabNumbersWithZero) any(ethWordspaceOrComma) + any(arabNumbers) > index(arabNumbersWithZero,1) index(ColonOrComma,2) index(arabNumbers,3)

c Ethiopic Numerals

  "'" + '1' > 'áŤ©'
  "'" + any(ArabOnes) > index(ones,2)

c special cases for multiples of one
  'áŤ©'  + '0' > 'áŤ˛'
  'áŤ˛'  + '0' > 'áŤ»'
  'áŤ»'  + '0' > 'áŤ˛áŤ»'
  'áŤ˛áŤ»' + '0' > 'áŤĽ'
  'áŤĽ'  + '0' > 'áŤ˛áŤĽ'    
  'áŤ˛áŤĽ' + '0' > 'áŤ»áŤĽ' 
  'áŤ»áŤĽ'  + '0' > 'áŤ˛áŤ»áŤĽ'
  'áŤ˛áŤ»áŤĽ' + '0' > 'áŤĽáŤĽ'
  'áŤĽáŤĽ' + '0' > context beep  c do not go any higher, we could beep here

c upto the order of 100 million
  any(ones)     + '0' > index(tens,1)
  any(tens)     + '0' > index(ones,1) 'áŤ»'  c Hundreds
  any(ones)  'áŤ» '+ '0' > index(tens,1) 'áŤ»'  c Thousands
  any(tens)  'áŤ»' + '0' > index(ones,1) 'áŤĽ'  c Ten Thousands
  any(ones)  'áŤĽ' + '0' > index(tens,1) 'áŤĽ'  c Hundred Thousands
  any(tens)  'áŤĽ' + '0' > index(ones,1) 'áŤ»áŤĽ' c Millions
  any(ones) 'áŤ»áŤĽ' + '0' > index(tens,1) 'áŤ»áŤĽ' c Ten Millions
  any(tens) 'áŤ»áŤĽ' + '0' > index(ones,1) 'áŤĽáŤĽ' c Hundred Millions

c enhance this later, look for something that can copy a match over
  any(ethNumbers) + any(arabNumbers) > index(ethNumbers,1)  index(ethNumbers,2)
c ---------------------End Input of Numbers-----------------------------------------------------
                                            
c =====================End Functional Section===================================================

--------------------------------------------------

