{
  "comment": {
    "pattern": "r:/#[^\\r\\n]*|^=begin\\s[\\s\\S]*?^=end/m",
    "greedy": true
  },
  "attribute": {
    "pattern": "r:/@\\[[^\\r\\n]*?\\]/",
    "inside": {
      "delimiter": {
        "pattern": "r:/^@\\[|\\](?:(?=\\r$)|$)/",
        "alias": "s:punctuation"
      },
      "attribute": {
        "pattern": "r:/^(\\s*)\\w+/",
        "lookbehind": true,
        "alias": "s:class-name"
      },
      "args": {
        "pattern": "r:/\\S(?:[\\s\\S]*\\S)?/",
        "inside": "s:[Circular ~]"
      }
    }
  },
  "expansion": {
    "pattern": "r:/\\{(?:\\{[^\\r\\n]*?\\}|%[^\\r\\n]*?%)\\}/",
    "inside": {
      "content": {
        "pattern": "r:/^(\\{[^\\r\\n])[\\s\\S]+(?=[^\\r\\n]\\}(?:(?=\\r$)|$))/",
        "lookbehind": true,
        "inside": "s:[Circular ~]"
      },
      "delimiter": {
        "pattern": "r:/^\\{[\\{%]|[\\}%]\\}(?:(?=\\r$)|$)/",
        "alias": "s:operator"
      }
    }
  },
  "char": {
    "pattern": "r:/'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:[^\\r\\n]|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/",
    "greedy": true
  },
  "string-literal": [
    {
      "pattern": "r:/%[qQiIwWs]?(?:([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1|\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>)/",
      "greedy": true,
      "inside": {
        "interpolation": {
          "pattern": "r:/((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/",
          "lookbehind": true,
          "inside": {
            "content": {
              "pattern": "r:/^(#\\{)[\\s\\S]+(?=\\}(?:(?=\\r$)|$))/",
              "lookbehind": true,
              "inside": "s:[Circular ~]"
            },
            "delimiter": {
              "pattern": "r:/^#\\{|\\}(?:(?=\\r$)|$)/",
              "alias": "s:punctuation"
            }
          }
        },
        "string": "r:/[\\s\\S]+/"
      }
    },
    {
      "pattern": "r:/(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/",
      "greedy": true,
      "inside": {
        "interpolation": {
          "pattern": "r:/((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/",
          "lookbehind": true,
          "inside": {
            "content": {
              "pattern": "r:/^(#\\{)[\\s\\S]+(?=\\}(?:(?=\\r$)|$))/",
              "lookbehind": true,
              "inside": "s:[Circular ~]"
            },
            "delimiter": {
              "pattern": "r:/^#\\{|\\}(?:(?=\\r$)|$)/",
              "alias": "s:punctuation"
            }
          }
        },
        "string": "r:/[\\s\\S]+/"
      }
    },
    {
      "pattern": "r:/<<[-~]?([a-z_]\\w*)[\\r\\n](?:[^\\r\\n]*[\\r\\n])*?[\\t ]*\\1/i",
      "alias": "s:heredoc-string",
      "greedy": true,
      "inside": {
        "delimiter": {
          "pattern": "r:/^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*(?:(?=\\r$)|$)/i",
          "inside": {
            "symbol": "r:/\\b\\w+/",
            "punctuation": "r:/^<<[-~]?/"
          }
        },
        "interpolation": {
          "pattern": "r:/((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/",
          "lookbehind": true,
          "inside": {
            "content": {
              "pattern": "r:/^(#\\{)[\\s\\S]+(?=\\}(?:(?=\\r$)|$))/",
              "lookbehind": true,
              "inside": "s:[Circular ~]"
            },
            "delimiter": {
              "pattern": "r:/^#\\{|\\}(?:(?=\\r$)|$)/",
              "alias": "s:punctuation"
            }
          }
        },
        "string": "r:/[\\s\\S]+/"
      }
    },
    {
      "pattern": "r:/<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:[^\\r\\n]*[\\r\\n])*?[\\t ]*\\1/i",
      "alias": "s:heredoc-string",
      "greedy": true,
      "inside": {
        "delimiter": {
          "pattern": "r:/^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*(?:(?=\\r$)|$)/i",
          "inside": {
            "symbol": "r:/\\b\\w+/",
            "punctuation": "r:/^<<[-~]?'|'(?:(?=\\r$)|$)/"
          }
        },
        "string": "r:/[\\s\\S]+/"
      }
    }
  ],
  "command-literal": [
    {
      "pattern": "r:/%x(?:([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1|\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>)/",
      "greedy": true,
      "inside": {
        "interpolation": {
          "pattern": "r:/((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/",
          "lookbehind": true,
          "inside": {
            "content": {
              "pattern": "r:/^(#\\{)[\\s\\S]+(?=\\}(?:(?=\\r$)|$))/",
              "lookbehind": true,
              "inside": "s:[Circular ~]"
            },
            "delimiter": {
              "pattern": "r:/^#\\{|\\}(?:(?=\\r$)|$)/",
              "alias": "s:punctuation"
            }
          }
        },
        "command": {
          "pattern": "r:/[\\s\\S]+/",
          "alias": "s:string"
        }
      }
    },
    {
      "pattern": "r:/`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/",
      "greedy": true,
      "inside": {
        "interpolation": {
          "pattern": "r:/((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/",
          "lookbehind": true,
          "inside": {
            "content": {
              "pattern": "r:/^(#\\{)[\\s\\S]+(?=\\}(?:(?=\\r$)|$))/",
              "lookbehind": true,
              "inside": "s:[Circular ~]"
            },
            "delimiter": {
              "pattern": "r:/^#\\{|\\}(?:(?=\\r$)|$)/",
              "alias": "s:punctuation"
            }
          }
        },
        "command": {
          "pattern": "r:/[\\s\\S]+/",
          "alias": "s:string"
        }
      }
    }
  ],
  "class-name": {
    "pattern": "r:/(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/",
    "lookbehind": true,
    "inside": {
      "punctuation": "r:/[.\\\\]/"
    }
  },
  "regex-literal": [
    {
      "pattern": "r:/%r(?:([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1|\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>)[egimnosux]{0,6}/",
      "greedy": true,
      "inside": {
        "interpolation": {
          "pattern": "r:/((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/",
          "lookbehind": true,
          "inside": {
            "content": {
              "pattern": "r:/^(#\\{)[\\s\\S]+(?=\\}(?:(?=\\r$)|$))/",
              "lookbehind": true,
              "inside": "s:[Circular ~]"
            },
            "delimiter": {
              "pattern": "r:/^#\\{|\\}(?:(?=\\r$)|$)/",
              "alias": "s:punctuation"
            }
          }
        },
        "regex": "r:/[\\s\\S]+/"
      }
    },
    {
      "pattern": "r:/(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\[^\\r\\n]|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:(?:(?=\\r$)|$)|[\\r\\n,.;})#]))/",
      "lookbehind": true,
      "greedy": true,
      "inside": {
        "interpolation": {
          "pattern": "r:/((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/",
          "lookbehind": true,
          "inside": {
            "content": {
              "pattern": "r:/^(#\\{)[\\s\\S]+(?=\\}(?:(?=\\r$)|$))/",
              "lookbehind": true,
              "inside": "s:[Circular ~]"
            },
            "delimiter": {
              "pattern": "r:/^#\\{|\\}(?:(?=\\r$)|$)/",
              "alias": "s:punctuation"
            }
          }
        },
        "regex": "r:/[\\s\\S]+/"
      }
    }
  ],
  "variable": "r:/[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/",
  "symbol": [
    {
      "pattern": "r:/(^|[^:]):(?:\"(?:\\\\[^\\r\\n]|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$[^\\r\\n])/",
      "lookbehind": true,
      "greedy": true
    },
    {
      "pattern": "r:/([\\r\\n{(,][ \\t]*)(?:\"(?:\\\\[^\\r\\n]|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$[^\\r\\n])(?=:(?!:))/",
      "lookbehind": true,
      "greedy": true
    }
  ],
  "method-definition": {
    "pattern": "r:/(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/",
    "lookbehind": true,
    "inside": {
      "function": "r:/\\b\\w+(?:(?=\\r$)|$)/",
      "keyword": "r:/^self\\b/",
      "class-name": "r:/^\\w+/",
      "punctuation": "r:/\\./"
    }
  },
  "keyword": [
    "r:/\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/",
    {
      "pattern": "r:/(\\.\\s*)(?:is_a|responds_to)\\?/",
      "lookbehind": true
    }
  ],
  "boolean": "r:/\\b(?:false|true)\\b/",
  "builtin": "r:/\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/",
  "constant": "r:/\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/",
  "number": "r:/\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/",
  "double-colon": {
    "pattern": "r:/::/",
    "alias": "s:punctuation"
  },
  "operator": [
    "r:/->/",
    "r:/\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/"
  ],
  "punctuation": "r:/[(){}[\\].,;\\\\]/"
}