{
  "comment": "r:/--[^\\r\\n]*|\\{-[\\s\\S]*?-\\}/",
  "char": {
    "pattern": "r:/'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+|u\\{[0-9a-fA-F]+\\}))'/",
    "greedy": true
  },
  "string": [
    {
      "pattern": "r:/\"\"\"[\\s\\S]*?\"\"\"/",
      "greedy": true
    },
    {
      "pattern": "r:/\"(?:[^\\\\\"\\r\\n]|\\\\[^\\r\\n])*\"/",
      "greedy": true
    }
  ],
  "import-statement": {
    "pattern": "r:/(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m",
    "lookbehind": true,
    "inside": {
      "keyword": "r:/\\b(?:as|exposing|import)\\b/"
    }
  },
  "keyword": "r:/\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/",
  "builtin": "r:/\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/",
  "number": "r:/\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i",
  "operator": "r:/\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/",
  "hvariable": "r:/\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/",
  "constant": "r:/\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/",
  "punctuation": "r:/[{}[\\]|(),.:]/"
}