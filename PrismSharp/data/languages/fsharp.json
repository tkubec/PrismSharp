{
  "comment": [
    {
      "pattern": "r:/(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/",
      "lookbehind": true,
      "greedy": true
    },
    {
      "pattern": "r:/(^|[^\\\\:])\\/\\/[^\\r\\n]*/",
      "lookbehind": true,
      "greedy": true
    }
  ],
  "annotation": {
    "pattern": "r:/\\[<[^\\r\\n]+?>\\]/",
    "greedy": true,
    "inside": {
      "punctuation": "r:/^\\[<|>\\](?:(?=\\r$)|$)/",
      "class-name": {
        "pattern": "r:/^\\w+(?:(?=\\r$)|$)|(^|;\\s*)[A-Z]\\w*(?=\\()/",
        "lookbehind": true
      },
      "annotation-content": {
        "pattern": "r:/[\\s\\S]+/",
        "inside": "s:[Circular ~]"
      }
    }
  },
  "char": {
    "pattern": "r:/'(?:[^\\\\']|\\\\(?:[^\\r\\n]|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/",
    "greedy": true
  },
  "string": {
    "pattern": "r:/(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/",
    "greedy": true
  },
  "class-name": {
    "pattern": "r:/(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/",
    "lookbehind": true,
    "inside": {
      "operator": "r:/->|\\*/",
      "punctuation": "r:/\\./"
    }
  },
  "preprocessor": {
    "pattern": "r:/(^[\\t ]*)#[^\\r\\n]*/m",
    "lookbehind": true,
    "alias": "s:property",
    "inside": {
      "directive": {
        "pattern": "r:/(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/",
        "lookbehind": true,
        "alias": "s:keyword"
      }
    }
  },
  "keyword": "r:/\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/",
  "boolean": "r:/\\b(?:false|true)\\b/",
  "function": "r:/\\b\\w+(?=\\()/",
  "number": [
    "r:/\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/",
    "r:/\\b0b[01]+(?:uy|y)?\\b/",
    "r:/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i",
    "r:/\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/"
  ],
  "operator": "r:/([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/",
  "computation-expression": {
    "pattern": "r:/\\b[_a-z]\\w*(?=\\s*\\{)/i",
    "alias": "s:keyword"
  },
  "punctuation": "r:/[{}[\\];(),.:]/"
}