{
  "comment": {
    "pattern": "r:/(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#[^\\r\\n]*)/",
    "lookbehind": true
  },
  "regex": {
    "pattern": "r:/r\"(?:\\\\[^\\r\\n]|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/",
    "greedy": true
  },
  "string": {
    "pattern": "r:/\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\[^\\r\\n]|[^\"\\\\\\r\\n])*\"|`(?:[^\\\\`\\r\\n]|\\\\[^\\r\\n])*`/",
    "greedy": true
  },
  "char": {
    "pattern": "r:/(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'/",
    "lookbehind": true,
    "greedy": true
  },
  "keyword": "r:/\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/",
  "boolean": "r:/\\b(?:false|true)\\b/",
  "number": "r:/(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i",
  "operator": "r:/&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/",
  "punctuation": "r:/::?|[{}[\\]();,.?]/",
  "constant": "r:/\\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\\b|[πℯ]/"
}