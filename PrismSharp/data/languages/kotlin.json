{
  "comment": [
    {
      "pattern": "r:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|(?:(?=\\r$)|$))/",
      "lookbehind": true,
      "greedy": true
    },
    {
      "pattern": "r:/(^|[^\\\\:])\\/\\/[^\\r\\n]*/",
      "lookbehind": true,
      "greedy": true
    }
  ],
  "string-literal": [
    {
      "pattern": "r:/\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/",
      "alias": "s:multiline",
      "inside": {
        "interpolation": {
          "pattern": "r:/\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i",
          "inside": {
            "interpolation-punctuation": {
              "pattern": "r:/^\\$\\{?|\\}(?:(?=\\r$)|$)/",
              "alias": "s:punctuation"
            },
            "expression": {
              "pattern": "r:/[\\s\\S]+/",
              "inside": "s:[Circular ~]"
            }
          }
        },
        "string": "r:/[\\s\\S]+/"
      }
    },
    {
      "pattern": "r:/\"(?:[^\"\\\\\\r\\n$]|\\\\[^\\r\\n]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/",
      "alias": "s:singleline",
      "inside": {
        "interpolation": {
          "pattern": "r:/((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i",
          "lookbehind": true,
          "inside": {
            "interpolation-punctuation": {
              "pattern": "r:/^\\$\\{?|\\}(?:(?=\\r$)|$)/",
              "alias": "s:punctuation"
            },
            "expression": {
              "pattern": "r:/[\\s\\S]+/",
              "inside": "s:[Circular ~]"
            }
          }
        },
        "string": "r:/[\\s\\S]+/"
      }
    }
  ],
  "char": {
    "pattern": "r:/'(?:[^'\\\\\\r\\n]|\\\\(?:[^\\r\\n]|u[a-fA-F0-9]{0,4}))'/",
    "greedy": true
  },
  "annotation": {
    "pattern": "r:/\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/",
    "alias": "s:builtin"
  },
  "keyword": {
    "pattern": "r:/(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/",
    "lookbehind": true
  },
  "boolean": "r:/\\b(?:false|true)\\b/",
  "label": {
    "pattern": "r:/\\b\\w+@|@\\w+\\b/",
    "alias": "s:symbol"
  },
  "function": [
    {
      "pattern": "r:/(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/",
      "greedy": true
    },
    {
      "pattern": "r:/(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/",
      "lookbehind": true,
      "greedy": true
    }
  ],
  "number": "r:/\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/",
  "operator": "r:/\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/",
  "punctuation": "r:/[{}[\\];(),.:]/"
}