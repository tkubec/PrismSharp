{
  "comment": {
    "pattern": "r:/#[^\\r\\n]*/",
    "greedy": true
  },
  "string": {
    "pattern": "r:/(?:\\b(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")/",
    "greedy": true
  },
  "char": {
    "pattern": "r:/'(?:\\\\(?:\\d+|x[\\da-fA-F]{0,2}|[^\\r\\n])|[^'])'/",
    "greedy": true
  },
  "function": {
    "pattern": "r:/(?:(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/",
    "greedy": true,
    "inside": {
      "operator": "r:/\\*(?:(?=\\r$)|$)/"
    }
  },
  "identifier": {
    "pattern": "r:/`[^`\\r\\n]+`/",
    "greedy": true,
    "inside": {
      "punctuation": "r:/`/"
    }
  },
  "number": "r:/\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/",
  "keyword": "r:/\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/",
  "operator": {
    "pattern": "r:/(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.)[^\\r\\n])(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\\b)/m",
    "lookbehind": true
  },
  "punctuation": "r:/[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/"
}