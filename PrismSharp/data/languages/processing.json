{
  "comment": [
    {
      "pattern": "r:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|(?:(?=\\r$)|$))/",
      "lookbehind": true,
      "greedy": true
    },
    {
      "pattern": "r:/(^|[^\\\\:])\\/\\/[^\\r\\n]*/",
      "lookbehind": true,
      "greedy": true
    }
  ],
  "string": {
    "pattern": "r:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/",
    "greedy": true
  },
  "class-name": {
    "pattern": "r:/(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/",
    "lookbehind": true,
    "inside": {
      "punctuation": "r:/[.\\\\]/"
    }
  },
  "keyword": "r:/\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/",
  "boolean": "r:/\\b(?:false|true)\\b/",
  "function": "r:/\\b\\w+(?=\\s*\\()/",
  "constant": "r:/\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/",
  "type": {
    "pattern": "r:/\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/",
    "alias": "s:class-name"
  },
  "number": "r:/\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i",
  "operator": "r:/<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/",
  "punctuation": "r:/[{}[\\];(),.:]/"
}