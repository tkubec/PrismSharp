{
  "comment": [
    {
      "pattern": "r:/(^|[^\\\\])\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|[^\\s\\S])*\\*\\/)*\\*\\/)*\\*\\/)*\\*\\//",
      "lookbehind": true,
      "greedy": true
    },
    {
      "pattern": "r:/(^|[^\\\\:])\\/\\/[^\\r\\n]*/",
      "lookbehind": true,
      "greedy": true
    }
  ],
  "string": {
    "pattern": "r:/b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/",
    "greedy": true
  },
  "char": {
    "pattern": "r:/b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|[^\\r\\n])|[^\\\\\\r\\n\\t'])'/",
    "greedy": true
  },
  "attribute": {
    "pattern": "r:/#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/",
    "greedy": true,
    "alias": "s:attr-name",
    "inside": {
      "string": {
        "pattern": "r:/b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/",
        "greedy": true
      }
    }
  },
  "closure-params": {
    "pattern": "r:/([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/",
    "lookbehind": true,
    "greedy": true,
    "inside": {
      "closure-punctuation": {
        "pattern": "r:/^\\||\\|(?:(?=\\r$)|$)/",
        "alias": "s:punctuation"
      },
      "rest": "s:[Circular ~]"
    }
  },
  "lifetime-annotation": {
    "pattern": "r:/'\\w+/",
    "alias": "s:symbol"
  },
  "fragment-specifier": {
    "pattern": "r:/(\\$\\w+:)[a-z]+/",
    "lookbehind": true,
    "alias": "s:punctuation"
  },
  "variable": "r:/\\$\\w+/",
  "function-definition": {
    "pattern": "r:/(\\bfn\\s+)\\w+/",
    "lookbehind": true,
    "alias": "s:function"
  },
  "type-definition": {
    "pattern": "r:/(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/",
    "lookbehind": true,
    "alias": "s:class-name"
  },
  "module-declaration": [
    {
      "pattern": "r:/(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/",
      "lookbehind": true,
      "alias": "s:namespace"
    },
    {
      "pattern": "r:/(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/",
      "lookbehind": true,
      "alias": "s:namespace",
      "inside": {
        "punctuation": "r:/::/"
      }
    }
  ],
  "keyword": [
    "r:/\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/",
    "r:/\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/"
  ],
  "function": "r:/\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/",
  "macro": {
    "pattern": "r:/\\b\\w+!/",
    "alias": "s:property"
  },
  "constant": "r:/\\b[A-Z_][A-Z_\\d]+\\b/",
  "class-name": "r:/\\b[A-Z]\\w*\\b/",
  "namespace": {
    "pattern": "r:/(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/",
    "inside": {
      "punctuation": "r:/::/"
    }
  },
  "number": "r:/\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/",
  "boolean": "r:/\\b(?:false|true)\\b/",
  "punctuation": "r:/->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/",
  "operator": "r:/[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/"
}