{
  "comment": "r:/\\/\\/[^\\r\\n]*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include)[^\\r\\n]*/",
  "string": {
    "pattern": "r:/\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/",
    "greedy": true
  },
  "directive": {
    "pattern": "r:/^([ \\t]*)#include\\b[^\\r\\n]*/m",
    "lookbehind": true,
    "alias": "s:property"
  },
  "function-arg": {
    "pattern": "r:/(\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b\\s*\\(\\s*)[a-zA-Z]\\w*/",
    "lookbehind": true,
    "alias": "s:function"
  },
  "constraint": {
    "pattern": "r:/(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/",
    "lookbehind": true,
    "inside": {
      "expression": {
        "pattern": "r:/(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>(?:(?=\\r$)|$)|,\\s*\\w+\\s*=))/",
        "lookbehind": true,
        "inside": "s:[Circular ~]"
      },
      "property": "r:/\\b[a-z]\\w*(?=\\s*=)/i",
      "operator": "r:/=/",
      "punctuation": "r:/^<|>(?:(?=\\r$)|$)|,/"
    }
  },
  "keyword": [
    {
      "pattern": "r:/\\bdata(?=\\s*\\{)|\\b(?:functions|generated|model|parameters|quantities|transformed)\\b/",
      "alias": "s:program-block"
    },
    "r:/\\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\\b/",
    "r:/\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b/"
  ],
  "function": "r:/\\b[a-z]\\w*(?=\\s*\\()/i",
  "number": "r:/(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:E[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i",
  "boolean": "r:/\\b(?:false|true)\\b/",
  "operator": "r:/<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/",
  "punctuation": "r:/[()\\[\\]{},;]/"
}