{
  "comment": [
    {
      "pattern": "r:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|(?:(?=\\r$)|$))/",
      "lookbehind": true,
      "greedy": true
    },
    {
      "pattern": "r:/(^|[^\\\\:])\\/\\/[^\\r\\n]*/",
      "lookbehind": true,
      "greedy": true
    }
  ],
  "char": {
    "pattern": "r:/`(?:\\\\`|\\\\?[^`]{1,2})`/",
    "alias": "s:rune"
  },
  "string": {
    "pattern": "r:/r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/",
    "alias": "s:quoted-string",
    "greedy": true,
    "inside": {
      "interpolation": {
        "pattern": "r:/((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/",
        "lookbehind": true,
        "inside": {
          "interpolation-variable": {
            "pattern": "r:/^\\$\\w[\\s\\S]*(?:(?=\\r$)|$)/",
            "alias": "s:variable"
          },
          "interpolation-punctuation": {
            "pattern": "r:/^\\$\\{|\\}(?:(?=\\r$)|$)/",
            "alias": "s:punctuation"
          },
          "interpolation-expression": {
            "pattern": "r:/[\\s\\S]+/",
            "inside": "s:[Circular ~]"
          }
        }
      }
    }
  },
  "class-name": {
    "pattern": "r:/(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/",
    "lookbehind": true
  },
  "keyword": "r:/(?:\\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:else|for|if)|#(?:flag|include))\\b/",
  "boolean": "r:/\\b(?:false|true)\\b/",
  "generic-function": {
    "pattern": "r:/\\b\\w+\\s*<\\w+>(?=\\()/",
    "inside": {
      "function": "r:/^\\w+/",
      "generic": {
        "pattern": "r:/<\\w+>/",
        "inside": {
          "punctuation": "r:/[<>]/",
          "class-name": "r:/\\w+/"
        }
      }
    }
  },
  "function": "r:/\\b\\w+(?=\\()/",
  "number": "r:/\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i",
  "attribute": {
    "pattern": "r:/(^[\\t ]*)\\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\\]/m",
    "lookbehind": true,
    "alias": "s:annotation",
    "inside": {
      "punctuation": "r:/[\\[\\]]/",
      "keyword": "r:/\\w+/"
    }
  },
  "generic": {
    "pattern": "r:/<\\w+>(?=\\s*[\\)\\{])/",
    "inside": {
      "punctuation": "r:/[<>]/",
      "class-name": "r:/\\w+/"
    }
  },
  "operator": "r:/~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/",
  "punctuation": "r:/[{}[\\];(),.:]/",
  "builtin": "r:/\\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/"
}