class Foo
interface BarBaz
struct Foo
enum Foo
record Foo
class Foo<A, B>
interface Bar<out T>
record Foo<A, B>

record TestData(string Name);

// not variables
public static RGBColor FromRainbow(Rainbow colorBand) =>
	colorBand switch
	{
		Rainbow.Red => new RGBColor(0xFF, 0x00, 0x00),
		_           => throw new ArgumentException(message: "invalid enum value", paramName: nameof(colorBand)),
	};

try {} catch (ArgumentException e) {}
----------------------------------------------------
<span class="token keyword">class</span> <span class="token class-name">Foo</span>
<span class="token keyword">interface</span> <span class="token class-name">BarBaz</span>
<span class="token keyword">struct</span> <span class="token class-name">Foo</span>
<span class="token keyword">enum</span> <span class="token class-name">Foo</span>
<span class="token keyword">record</span> <span class="token class-name">Foo</span>
<span class="token keyword">class</span> <span class="token class-name">Foo<span class="token punctuation">&lt;</span>A<span class="token punctuation">,</span> B<span class="token punctuation">></span></span>
<span class="token keyword">interface</span> <span class="token class-name">Bar<span class="token punctuation">&lt;</span><span class="token keyword">out</span> T<span class="token punctuation">></span></span>
<span class="token keyword">record</span> <span class="token class-name">Foo<span class="token punctuation">&lt;</span>A<span class="token punctuation">,</span> B<span class="token punctuation">></span></span>

<span class="token keyword">record</span> <span class="token class-name">TestData</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> Name<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// not variables</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">RGBColor</span> <span class="token function">FromRainbow</span><span class="token punctuation">(</span><span class="token class-name">Rainbow</span> colorBand<span class="token punctuation">)</span> <span class="token operator">=></span>
	colorBand <span class="token keyword">switch</span>
	<span class="token punctuation">{</span>
		Rainbow<span class="token punctuation">.</span>Red <span class="token operator">=></span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RGBColor</span><span class="token punctuation">(</span><span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		_           <span class="token operator">=></span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArgumentException</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">message</span><span class="token punctuation">:</span> <span class="token string">"invalid enum value"</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">paramName</span><span class="token punctuation">:</span> <span class="token keyword">nameof</span><span class="token punctuation">(</span>colorBand<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ArgumentException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

----------------------------------------------------