void abc<U, V>() where U : struct, IFoo where V : IFoo<U> {}
delegate void F<U>(U u) where U : class, IFoo<Bar>;
class Foo<T> where T : IFoo<int> {}
readonly struct Foo<T> where T : unmanaged {}
----------------------------------------------------
<span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token generic-method"><span class="token function">abc</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>U<span class="token punctuation">,</span> V<span class="token punctuation">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">U</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token keyword">struct</span><span class="token punctuation">,</span> <span class="token class-name">IFoo</span></span> <span class="token keyword">where</span> <span class="token class-name">V</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IFoo<span class="token punctuation">&lt;</span>U<span class="token punctuation">></span></span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">delegate</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token generic-method"><span class="token function">F</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>U<span class="token punctuation">></span></span></span><span class="token punctuation">(</span><span class="token class-name">U</span> u<span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">U</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">IFoo<span class="token punctuation">&lt;</span>Bar<span class="token punctuation">></span></span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Foo<span class="token punctuation">&lt;</span>T<span class="token punctuation">></span></span> <span class="token keyword">where</span> <span class="token class-name">T</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IFoo<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">></span></span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">readonly</span> <span class="token keyword">struct</span> <span class="token class-name">Foo<span class="token punctuation">&lt;</span>T<span class="token punctuation">></span></span> <span class="token keyword">where</span> <span class="token class-name">T</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token keyword">unmanaged</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

----------------------------------------------------