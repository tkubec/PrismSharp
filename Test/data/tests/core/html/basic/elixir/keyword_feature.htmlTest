after alias and case
catch cond def
defcallback
defexception
defimpl defmodule
defp
defprotocol
defdelegate
defmacro quote unquote
defn defnp
defstruct do else
end fn for if
import not or
raise require rescue try
unless use when
----------------------------------------------------
<span class="token keyword">after</span> <span class="token keyword">alias</span> <span class="token keyword">and</span> <span class="token keyword">case</span>
<span class="token keyword">catch</span> <span class="token keyword">cond</span> <span class="token keyword">def</span>
<span class="token keyword">defcallback</span>
<span class="token keyword">defexception</span>
<span class="token keyword">defimpl</span> <span class="token keyword">defmodule</span>
<span class="token keyword">defp</span>
<span class="token keyword">defprotocol</span>
<span class="token keyword">defdelegate</span>
<span class="token keyword">defmacro</span> <span class="token keyword">quote</span> <span class="token keyword">unquote</span>
<span class="token keyword">defn</span> <span class="token keyword">defnp</span>
<span class="token keyword">defstruct</span> <span class="token keyword">do</span> <span class="token keyword">else</span>
<span class="token keyword">end</span> <span class="token keyword">fn</span> <span class="token keyword">for</span> <span class="token keyword">if</span>
<span class="token keyword">import</span> <span class="token keyword">not</span> <span class="token keyword">or</span>
<span class="token keyword">raise</span> <span class="token keyword">require</span> <span class="token keyword">rescue</span> <span class="token keyword">try</span>
<span class="token keyword">unless</span> <span class="token keyword">use</span> <span class="token keyword">when</span>

----------------------------------------------------