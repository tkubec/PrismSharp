as def in abstract
assert boolean break
byte case catch char
class;
const continue
default do double else
enum
extends;
final
finally float for goto
if
implements;
import
instanceof;
int
interface;
long native
new;
package private protected
public return short
static strictfp super
switch synchronized this
throw throws
trait;
transient
try void volatile while
----------------------------------------------------
<span class="token keyword">as</span> <span class="token keyword">def</span> <span class="token keyword">in</span> <span class="token keyword">abstract</span>
<span class="token keyword">assert</span> <span class="token keyword">boolean</span> <span class="token keyword">break</span>
<span class="token keyword">byte</span> <span class="token keyword">case</span> <span class="token keyword">catch</span> <span class="token keyword">char</span>
<span class="token keyword">class</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">continue</span>
<span class="token keyword">default</span> <span class="token keyword">do</span> <span class="token keyword">double</span> <span class="token keyword">else</span>
<span class="token keyword">enum</span>
<span class="token keyword">extends</span><span class="token punctuation">;</span>
<span class="token keyword">final</span>
<span class="token keyword">finally</span> <span class="token keyword">float</span> <span class="token keyword">for</span> <span class="token keyword">goto</span>
<span class="token keyword">if</span>
<span class="token keyword">implements</span><span class="token punctuation">;</span>
<span class="token keyword">import</span>
<span class="token keyword">instanceof</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>
<span class="token keyword">interface</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> <span class="token keyword">native</span>
<span class="token keyword">new</span><span class="token punctuation">;</span>
<span class="token keyword">package</span> <span class="token keyword">private</span> <span class="token keyword">protected</span>
<span class="token keyword">public</span> <span class="token keyword">return</span> <span class="token keyword">short</span>
<span class="token keyword">static</span> <span class="token keyword">strictfp</span> <span class="token keyword">super</span>
<span class="token keyword">switch</span> <span class="token keyword">synchronized</span> <span class="token keyword">this</span>
<span class="token keyword">throw</span> <span class="token keyword">throws</span>
<span class="token keyword">trait</span><span class="token punctuation">;</span>
<span class="token keyword">transient</span>
<span class="token keyword">try</span> <span class="token keyword">void</span> <span class="token keyword">volatile</span> <span class="token keyword">while</span>

----------------------------------------------------