/**
 * @throws IllegalArgumentException if the argument is negative.
 * @see org.my.company.InfoClass for more information.
 * @param <T> the first generic argument.
 * {@linkplain #foo(char[], java.lang.String) foo}
 *
 * multi-line {@link
 * #foo(char[], java.lang.String)}
 *
 * @see #field
 * @see #method(Type, Type)
 * @see #method(Type argname, Type argname)
 * @see #constructor(Type, Type)
 * @see #constructor(Type argname, Type argname)
 * @see Class#field
 * @see Class#method(Type, Type)
 * @see Class#method(Type argname, Type argname)
 * @see Class#constructor(Type, Type)
 * @see Class#constructor(Type argname, Type argname)
 * @see Class.NestedClass
 * @see Class
 * @see foo.bar.Class#field
 * @see foo.bar.Class#method(Type, Type)
 * @see foo.bar.Class#method(Type argname, Type argname)
 * @see foo.bar.Class#constructor(Type, Type)
 * @see foo.bar.Class#constructor(Type argname, Type argname)
 * @see foo.bar.Class.NestedClass
 * @see foo.bar.Class
 */
----------------------------------------------------
/**
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IllegalArgumentException</span></span> if the argument is negative.
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">org<span class="token punctuation">.</span>my<span class="token punctuation">.</span>company<span class="token punctuation">.</span></span><span class="token class-name">InfoClass</span></span> for more information.
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">></span></span> the first generic argument.
 * <span class="token punctuation">{</span><span class="token keyword">@linkplain</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">String</span><span class="token punctuation">)</span></span> foo<span class="token punctuation">}</span>
 *
 * multi-line <span class="token punctuation">{</span><span class="token keyword">@link</span>
 * <span class="token reference"><span class="token punctuation">#</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">String</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>
 *
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">field</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token class-name">Type</span><span class="token punctuation">,</span> <span class="token class-name">Type</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token class-name">Type</span> argname<span class="token punctuation">,</span> <span class="token class-name">Type</span> argname<span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token class-name">Type</span><span class="token punctuation">,</span> <span class="token class-name">Type</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token class-name">Type</span> argname<span class="token punctuation">,</span> <span class="token class-name">Type</span> argname<span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">Class</span><span class="token punctuation">#</span><span class="token field">field</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">Class</span><span class="token punctuation">#</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token class-name">Type</span><span class="token punctuation">,</span> <span class="token class-name">Type</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">Class</span><span class="token punctuation">#</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token class-name">Type</span> argname<span class="token punctuation">,</span> <span class="token class-name">Type</span> argname<span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">Class</span><span class="token punctuation">#</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token class-name">Type</span><span class="token punctuation">,</span> <span class="token class-name">Type</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">Class</span><span class="token punctuation">#</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token class-name">Type</span> argname<span class="token punctuation">,</span> <span class="token class-name">Type</span> argname<span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token class-name">NestedClass</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">Class</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span></span><span class="token class-name">Class</span><span class="token punctuation">#</span><span class="token field">field</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span></span><span class="token class-name">Class</span><span class="token punctuation">#</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token class-name">Type</span><span class="token punctuation">,</span> <span class="token class-name">Type</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span></span><span class="token class-name">Class</span><span class="token punctuation">#</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token class-name">Type</span> argname<span class="token punctuation">,</span> <span class="token class-name">Type</span> argname<span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span></span><span class="token class-name">Class</span><span class="token punctuation">#</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token class-name">Type</span><span class="token punctuation">,</span> <span class="token class-name">Type</span><span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span></span><span class="token class-name">Class</span><span class="token punctuation">#</span><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token class-name">Type</span> argname<span class="token punctuation">,</span> <span class="token class-name">Type</span> argname<span class="token punctuation">)</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span></span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token class-name">NestedClass</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">foo<span class="token punctuation">.</span>bar<span class="token punctuation">.</span></span><span class="token class-name">Class</span></span>
 */

----------------------------------------------------