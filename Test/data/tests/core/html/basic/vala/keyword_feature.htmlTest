bool
char
double
float
null
size_t
ssize_t
string
unichar
void
int
int8
int16
int32
int64
long
short
uchar
uint
uint8
uint16
uint32
uint64
ulong
ushort
class
delegate
enum
errordomain
interface
namespace
struct
break
continue
do
for
foreach
return
while
else
if
switch
assert
case
default
abstract
const
dynamic
ensures
extern
inline
internal
override
private
protected
public
requires
signal
static
virtual
volatile
weak
async
owned
unowned
try
catch
finally
throw
as
base
construct
delete
get
in
is
lock
new
out
params
ref
sizeof
set
this
throws
typeof
using
value
var
yield
----------------------------------------------------
<span class="token keyword">bool</span>
<span class="token keyword">char</span>
<span class="token keyword">double</span>
<span class="token keyword">float</span>
<span class="token keyword">null</span>
<span class="token keyword">size_t</span>
<span class="token keyword">ssize_t</span>
<span class="token keyword">string</span>
<span class="token keyword">unichar</span>
<span class="token keyword">void</span>
<span class="token keyword">int</span>
<span class="token keyword">int8</span>
<span class="token keyword">int16</span>
<span class="token keyword">int32</span>
<span class="token keyword">int64</span>
<span class="token keyword">long</span>
<span class="token keyword">short</span>
<span class="token keyword">uchar</span>
<span class="token keyword">uint</span>
<span class="token keyword">uint8</span>
<span class="token keyword">uint16</span>
<span class="token keyword">uint32</span>
<span class="token keyword">uint64</span>
<span class="token keyword">ulong</span>
<span class="token keyword">ushort</span>
<span class="token keyword">class</span>
<span class="token keyword">delegate</span>
<span class="token keyword">enum</span>
<span class="token keyword">errordomain</span>
<span class="token keyword">interface</span>
<span class="token keyword">namespace</span>
<span class="token keyword">struct</span>
<span class="token keyword">break</span>
<span class="token keyword">continue</span>
<span class="token keyword">do</span>
<span class="token keyword">for</span>
<span class="token keyword">foreach</span>
<span class="token keyword">return</span>
<span class="token keyword">while</span>
<span class="token keyword">else</span>
<span class="token keyword">if</span>
<span class="token keyword">switch</span>
<span class="token keyword">assert</span>
<span class="token keyword">case</span>
<span class="token keyword">default</span>
<span class="token keyword">abstract</span>
<span class="token keyword">const</span>
<span class="token keyword">dynamic</span>
<span class="token keyword">ensures</span>
<span class="token keyword">extern</span>
<span class="token keyword">inline</span>
<span class="token keyword">internal</span>
<span class="token keyword">override</span>
<span class="token keyword">private</span>
<span class="token keyword">protected</span>
<span class="token keyword">public</span>
<span class="token keyword">requires</span>
<span class="token keyword">signal</span>
<span class="token keyword">static</span>
<span class="token keyword">virtual</span>
<span class="token keyword">volatile</span>
<span class="token keyword">weak</span>
<span class="token keyword">async</span>
<span class="token keyword">owned</span>
<span class="token keyword">unowned</span>
<span class="token keyword">try</span>
<span class="token keyword">catch</span>
<span class="token keyword">finally</span>
<span class="token keyword">throw</span>
<span class="token keyword">as</span>
<span class="token keyword">base</span>
<span class="token keyword">construct</span>
<span class="token keyword">delete</span>
<span class="token keyword">get</span>
<span class="token keyword">in</span>
<span class="token keyword">is</span>
<span class="token keyword">lock</span>
<span class="token keyword">new</span>
<span class="token keyword">out</span>
<span class="token keyword">params</span>
<span class="token keyword">ref</span>
<span class="token keyword">sizeof</span>
<span class="token keyword">set</span>
<span class="token keyword">this</span>
<span class="token keyword">throws</span>
<span class="token keyword">typeof</span>
<span class="token keyword">using</span>
<span class="token keyword">value</span>
<span class="token keyword">var</span>
<span class="token keyword">yield</span>

----------------------------------------------------