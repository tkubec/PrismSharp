package {
  import flash.display.*;
  import flash.events.*;
  import flash.filters.BlurFilter;
  import flash.geom.*;
  import flash.ui.*;
  public class ch23ex2 extends Sprite {
    protected const BMP_SCALE:Number = 1/2;
    protected const D:Number = 1.015;
    protected const DIM_EFFECT:ColorTransform = new ColorTransform(D, D, D);
    protected const B:int = 16;
    protected const BLUR_EFFECT:BlurFilter = new BlurFilter(B, B, 1);
    protected var RLUT:Array, GLUT:Array, BLUT:Array;
    protected var sourceBmp:BitmapData;
    protected var colorBmp:BitmapData;
    protected var touches:Array = new Array();
    protected var fingerShape:Shape = new Shape();
    public function ch23ex2() {
      try {
        var test:Class = Multitouch;
        if (Multitouch.supportsTouchEvents) {
          Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;
          init();
        } else {
          trace("Sorry, this example requires multitouch.");
        }
      } catch (error:ReferenceError) {
        trace("Sorry, but multitouch is not supported in this runtime.");
      }
    }
    protected function init():void {
      //create a black-and-white bitmap and a color bitmap, only show the color
      sourceBmp = new BitmapData(
        stage.stageWidth*BMP_SCALE, stage.stageHeight*BMP_SCALE, false, 0);
      colorBmp = sourceBmp.clone();
      var bitmap:Bitmap = new Bitmap(colorBmp, PixelSnapping.ALWAYS, true);
      bitmap.width = stage.stageWidth; bitmap.height = stage.stageHeight;
      addChild(bitmap);

      //create finger shape to paste onto the bitmap under your touches
      fingerShape.graphics.beginFill(0xffffff, 0.1);
      fingerShape.graphics.drawEllipse(-15, -20, 30, 40);
      fingerShape.graphics.endFill();

      //create the palette map from a gradient
      var gradient:Shape = new Shape();
      var m:Matrix = new Matrix();
      m.createGradientBox(256, 10);
      gradient.graphics.beginGradientFill(GradientType.LINEAR,
        [0x313ad8, 0x2dce4a, 0xdae234, 0x7a1c1c, 0x0f0303],
        [1, 1, 1, 1, 1], [0, 0.4*256, 0.75*256, 0.9*256, 255], m);
      gradient.graphics.drawRect(0, 0, 256, 10);
      var gradientBmp:BitmapData = new BitmapData(256, 10, false, 0);
      gradientBmp.draw(gradient);
      RLUT = new Array(); GLUT = new Array(); BLUT = new Array();
      for (var i:int = 0; i < 256; i++) {
        var pixelColor:uint = gradientBmp.getPixel(i, 0);
        //I drew the gradient backwards, so sue me
        RLUT[256-i] = pixelColor & 0xff0000;
        GLUT[256-i] = pixelColor & 0x00ff00;
        BLUT[256-i] = pixelColor & 0x0000ff;
      }

      stage.addEventListener(TouchEvent.TOUCH_BEGIN, assignTouch);
      stage.addEventListener(TouchEvent.TOUCH_MOVE, assignTouch);
      stage.addEventListener(TouchEvent.TOUCH_END, removeTouch);
      stage.addEventListener(Event.ENTER_FRAME, onEnterFrame);
    }
    protected function assignTouch(event:TouchEvent):void {
      touches[event.touchPointID] = event;
    }
    protected function removeTouch(event:TouchEvent):void {
      delete touches[event.touchPointID];
    }
    protected function onEnterFrame(event:Event):void {
      for (var key:String in touches) {
        var touch:TouchEvent = touches[key] as TouchEvent;
        if (touch) {
          //plaster the finger image under your finger
          var m:Matrix = new Matrix();
          m.translate(touch.stageX*BMP_SCALE, touch.stageY*BMP_SCALE);
          sourceBmp.draw(fingerShape, m, null, BlendMode.ADD);
        }
      }
      var O:Point = new Point(0, 0);
      //blur and ever-so-slightly brighten the image to make the color last
      sourceBmp.applyFilter(sourceBmp, sourceBmp.rect, O, BLUR_EFFECT);
      sourceBmp.colorTransform(sourceBmp.rect, DIM_EFFECT);
      //we've calculated the image in grayscale brightnesses, now make it color
      colorBmp.paletteMap(sourceBmp, sourceBmp.rect, O, RLUT, GLUT, BLUT, null);
    }
  }
}
----------------------------------------------------
<span class="token keyword">package</span> <span class="token punctuation">{</span>
  <span class="token keyword">import</span> flash<span class="token punctuation">.</span>display<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> flash<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> flash<span class="token punctuation">.</span>filters<span class="token punctuation">.</span>BlurFilter<span class="token punctuation">;</span>
  <span class="token keyword">import</span> flash<span class="token punctuation">.</span>geom<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> flash<span class="token punctuation">.</span>ui<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ch23ex2</span> <span class="token keyword">extends</span> <span class="token class-name">Sprite</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">const</span> <span class="token constant">BMP_SCALE</span><span class="token punctuation">:</span>Number <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">const</span> <span class="token constant">D</span><span class="token punctuation">:</span>Number <span class="token operator">=</span> <span class="token number">1.015</span><span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">const</span> <span class="token constant">DIM_EFFECT</span><span class="token punctuation">:</span>ColorTransform <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorTransform</span><span class="token punctuation">(</span><span class="token constant">D</span><span class="token punctuation">,</span> <span class="token constant">D</span><span class="token punctuation">,</span> <span class="token constant">D</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">const</span> <span class="token constant">B</span><span class="token punctuation">:</span>int <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">const</span> <span class="token constant">BLUR_EFFECT</span><span class="token punctuation">:</span>BlurFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlurFilter</span><span class="token punctuation">(</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token constant">B</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">var</span> <span class="token constant">RLUT</span><span class="token punctuation">:</span>Array<span class="token punctuation">,</span> <span class="token constant">GLUT</span><span class="token punctuation">:</span>Array<span class="token punctuation">,</span> <span class="token constant">BLUT</span><span class="token punctuation">:</span>Array<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">var</span> sourceBmp<span class="token punctuation">:</span>BitmapData<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">var</span> colorBmp<span class="token punctuation">:</span>BitmapData<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">var</span> touches<span class="token punctuation">:</span>Array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">var</span> fingerShape<span class="token punctuation">:</span>Shape <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Shape</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">ch23ex2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> test<span class="token punctuation">:</span>Class <span class="token operator">=</span> Multitouch<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Multitouch<span class="token punctuation">.</span>supportsTouchEvents<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          Multitouch<span class="token punctuation">.</span>inputMode <span class="token operator">=</span> MultitouchInputMode<span class="token punctuation">.</span><span class="token constant">TOUCH_POINT</span><span class="token punctuation">;</span>
          <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">"Sorry, this example requires multitouch."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">:</span>ReferenceError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">"Sorry, but multitouch is not supported in this runtime."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>
      <span class="token comment">//create a black-and-white bitmap and a color bitmap, only show the color</span>
      sourceBmp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitmapData</span><span class="token punctuation">(</span>
        stage<span class="token punctuation">.</span>stageWidth<span class="token operator">*</span><span class="token constant">BMP_SCALE</span><span class="token punctuation">,</span> stage<span class="token punctuation">.</span>stageHeight<span class="token operator">*</span><span class="token constant">BMP_SCALE</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      colorBmp <span class="token operator">=</span> sourceBmp<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> bitmap<span class="token punctuation">:</span>Bitmap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bitmap</span><span class="token punctuation">(</span>colorBmp<span class="token punctuation">,</span> PixelSnapping<span class="token punctuation">.</span><span class="token constant">ALWAYS</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      bitmap<span class="token punctuation">.</span>width <span class="token operator">=</span> stage<span class="token punctuation">.</span>stageWidth<span class="token punctuation">;</span> bitmap<span class="token punctuation">.</span>height <span class="token operator">=</span> stage<span class="token punctuation">.</span>stageHeight<span class="token punctuation">;</span>
      <span class="token function">addChild</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">//create finger shape to paste onto the bitmap under your touches</span>
      fingerShape<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">beginFill</span><span class="token punctuation">(</span><span class="token number">0xffffff</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      fingerShape<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">drawEllipse</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      fingerShape<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">endFill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">//create the palette map from a gradient</span>
      <span class="token keyword">var</span> gradient<span class="token punctuation">:</span>Shape <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Shape</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> m<span class="token punctuation">:</span>Matrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Matrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      m<span class="token punctuation">.</span><span class="token function">createGradientBox</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      gradient<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">beginGradientFill</span><span class="token punctuation">(</span>GradientType<span class="token punctuation">.</span><span class="token constant">LINEAR</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">0x313ad8</span><span class="token punctuation">,</span> <span class="token number">0x2dce4a</span><span class="token punctuation">,</span> <span class="token number">0xdae234</span><span class="token punctuation">,</span> <span class="token number">0x7a1c1c</span><span class="token punctuation">,</span> <span class="token number">0x0f0303</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token operator">*</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token operator">*</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">0.9</span><span class="token operator">*</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
      gradient<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> gradientBmp<span class="token punctuation">:</span>BitmapData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitmapData</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      gradientBmp<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>gradient<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token constant">RLUT</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token constant">GLUT</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token constant">BLUT</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token punctuation">:</span>int <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> pixelColor<span class="token punctuation">:</span>uint <span class="token operator">=</span> gradientBmp<span class="token punctuation">.</span><span class="token function">getPixel</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//I drew the gradient backwards, so sue me</span>
        <span class="token constant">RLUT</span><span class="token punctuation">[</span><span class="token number">256</span><span class="token operator">-</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> pixelColor <span class="token operator">&amp;</span> <span class="token number">0xff0000</span><span class="token punctuation">;</span>
        <span class="token constant">GLUT</span><span class="token punctuation">[</span><span class="token number">256</span><span class="token operator">-</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> pixelColor <span class="token operator">&amp;</span> <span class="token number">0x00ff00</span><span class="token punctuation">;</span>
        <span class="token constant">BLUT</span><span class="token punctuation">[</span><span class="token number">256</span><span class="token operator">-</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> pixelColor <span class="token operator">&amp;</span> <span class="token number">0x0000ff</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      stage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>TouchEvent<span class="token punctuation">.</span><span class="token constant">TOUCH_BEGIN</span><span class="token punctuation">,</span> assignTouch<span class="token punctuation">)</span><span class="token punctuation">;</span>
      stage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>TouchEvent<span class="token punctuation">.</span><span class="token constant">TOUCH_MOVE</span><span class="token punctuation">,</span> assignTouch<span class="token punctuation">)</span><span class="token punctuation">;</span>
      stage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>TouchEvent<span class="token punctuation">.</span><span class="token constant">TOUCH_END</span><span class="token punctuation">,</span> removeTouch<span class="token punctuation">)</span><span class="token punctuation">;</span>
      stage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>Event<span class="token punctuation">.</span><span class="token constant">ENTER_FRAME</span><span class="token punctuation">,</span> onEnterFrame<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">assignTouch</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span>TouchEvent<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>
      touches<span class="token punctuation">[</span>event<span class="token punctuation">.</span>touchPointID<span class="token punctuation">]</span> <span class="token operator">=</span> event<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">removeTouch</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span>TouchEvent<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>
      <span class="token keyword">delete</span> touches<span class="token punctuation">[</span>event<span class="token punctuation">.</span>touchPointID<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">onEnterFrame</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span>Event<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">void</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key<span class="token punctuation">:</span>String <span class="token keyword">in</span> touches<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> touch<span class="token punctuation">:</span>TouchEvent <span class="token operator">=</span> touches<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token keyword">as</span> TouchEvent<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>touch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">//plaster the finger image under your finger</span>
          <span class="token keyword">var</span> m<span class="token punctuation">:</span>Matrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Matrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          m<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>touch<span class="token punctuation">.</span>stageX<span class="token operator">*</span><span class="token constant">BMP_SCALE</span><span class="token punctuation">,</span> touch<span class="token punctuation">.</span>stageY<span class="token operator">*</span><span class="token constant">BMP_SCALE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          sourceBmp<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>fingerShape<span class="token punctuation">,</span> m<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> BlendMode<span class="token punctuation">.</span><span class="token constant">ADD</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">var</span> <span class="token constant">O</span><span class="token punctuation">:</span>Point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//blur and ever-so-slightly brighten the image to make the color last</span>
      sourceBmp<span class="token punctuation">.</span><span class="token function">applyFilter</span><span class="token punctuation">(</span>sourceBmp<span class="token punctuation">,</span> sourceBmp<span class="token punctuation">.</span>rect<span class="token punctuation">,</span> <span class="token constant">O</span><span class="token punctuation">,</span> <span class="token constant">BLUR_EFFECT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      sourceBmp<span class="token punctuation">.</span><span class="token function">colorTransform</span><span class="token punctuation">(</span>sourceBmp<span class="token punctuation">.</span>rect<span class="token punctuation">,</span> <span class="token constant">DIM_EFFECT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//we've calculated the image in grayscale brightnesses, now make it color</span>
      colorBmp<span class="token punctuation">.</span><span class="token function">paletteMap</span><span class="token punctuation">(</span>sourceBmp<span class="token punctuation">,</span> sourceBmp<span class="token punctuation">.</span>rect<span class="token punctuation">,</span> <span class="token constant">O</span><span class="token punctuation">,</span> <span class="token constant">RLUT</span><span class="token punctuation">,</span> <span class="token constant">GLUT</span><span class="token punctuation">,</span> <span class="token constant">BLUT</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

----------------------------------------------------