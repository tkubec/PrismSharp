// Source: http://magma.maths.usyd.edu.au/magma/handbook/text/115#963
> D := Denominator;
> N := Numerator;
> farey := function(n)
>    f := [ RationalField() | 0, 1/n ];
>    p := 0;
>    q := 1;
>    while p/q lt 1 do
>       p := ( D(f[#f-1]) + n) div D(f[#f]) * N(f[#f])  - N(f[#f-1]);
>       q := ( D(f[#f-1]) + n) div D(f[#f]) * D(f[#f])  - D(f[#f-1]);
>       Append(~f, p/q);
>    end while;
>    return f;
> end function;
> function farey(n)
>    if n eq 1 then
>       return [RationalField() | 0, 1 ];
>    else
>       f := farey(n-1);
>       i := 0;
>       while i lt #f-1 do
>          i +:= 1;
>          if D(f[i]) + D(f[i+1]) eq n then
>             Insert( ~f, i+1, (N(f[i]) + N(f[i+1]))/(D(f[i]) + D(f[i+1])));
>          end if;
>       end while;
>       return f;
>    end if;
> end function;
> farey := func< n |
>               Sort(Setseq({ a/b : a in { 0..n }, b in { 1..n } | a le b }))>;
> farey(6);
[ 0, 1/6, 1/5, 1/4, 1/3, 2/5, 1/2, 3/5, 2/3, 3/4, 4/5, 5/6, 1 ]
----------------------------------------------------
<span class="token comment">// Source: http://magma.maths.usyd.edu.au/magma/handbook/text/115#963</span>
<span class="token punctuation">></span> D <span class="token operator">:=</span> Denominator<span class="token punctuation">;</span>
<span class="token punctuation">></span> N <span class="token operator">:=</span> Numerator<span class="token punctuation">;</span>
<span class="token punctuation">></span> farey <span class="token operator">:=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
<span class="token punctuation">></span>    f <span class="token operator">:=</span> <span class="token punctuation">[</span> <span class="token function">RationalField</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span>n <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>    p <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>    q <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>    <span class="token keyword">while</span> p<span class="token operator">/</span>q <span class="token keyword">lt</span> <span class="token number">1</span> <span class="token keyword">do</span>
<span class="token punctuation">></span>       p <span class="token operator">:=</span> <span class="token punctuation">(</span> <span class="token function">D</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token operator">#</span>f<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> n<span class="token punctuation">)</span> <span class="token keyword">div</span> <span class="token function">D</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token operator">#</span>f<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">N</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token operator">#</span>f<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token operator">-</span> <span class="token function">N</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token operator">#</span>f<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>       q <span class="token operator">:=</span> <span class="token punctuation">(</span> <span class="token function">D</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token operator">#</span>f<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> n<span class="token punctuation">)</span> <span class="token keyword">div</span> <span class="token function">D</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token operator">#</span>f<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">D</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token operator">#</span>f<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token operator">-</span> <span class="token function">D</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token operator">#</span>f<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>       <span class="token function">Append</span><span class="token punctuation">(</span><span class="token operator">~</span>f<span class="token punctuation">,</span> p<span class="token operator">/</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>    <span class="token keyword">end</span> <span class="token keyword">while</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>    <span class="token keyword">return</span> f<span class="token punctuation">;</span>
<span class="token punctuation">></span> <span class="token keyword">end</span> <span class="token keyword">function</span><span class="token punctuation">;</span>
<span class="token punctuation">></span> <span class="token keyword">function</span> <span class="token function">farey</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
<span class="token punctuation">></span>    <span class="token keyword">if</span> n <span class="token keyword">eq</span> <span class="token number">1</span> <span class="token keyword">then</span>
<span class="token punctuation">></span>       <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token function">RationalField</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>    <span class="token keyword">else</span>
<span class="token punctuation">></span>       f <span class="token operator">:=</span> <span class="token function">farey</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>       i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>       <span class="token keyword">while</span> i <span class="token keyword">lt</span> <span class="token operator">#</span>f<span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">do</span>
<span class="token punctuation">></span>          i <span class="token operator">+</span><span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>          <span class="token keyword">if</span> <span class="token function">D</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">D</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">eq</span> n <span class="token keyword">then</span>
<span class="token punctuation">></span>             <span class="token function">Insert</span><span class="token punctuation">(</span> <span class="token operator">~</span>f<span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token function">N</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">N</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token function">D</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">D</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>          <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>       <span class="token keyword">end</span> <span class="token keyword">while</span><span class="token punctuation">;</span>
<span class="token punctuation">></span>       <span class="token keyword">return</span> f<span class="token punctuation">;</span>
<span class="token punctuation">></span>    <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
<span class="token punctuation">></span> <span class="token keyword">end</span> <span class="token keyword">function</span><span class="token punctuation">;</span>
<span class="token punctuation">></span> farey <span class="token operator">:=</span> <span class="token generator class-name">func</span><span class="token punctuation">&lt;</span> n <span class="token operator">|</span>
<span class="token punctuation">></span>               <span class="token function">Sort</span><span class="token punctuation">(</span><span class="token function">Setseq</span><span class="token punctuation">(</span><span class="token punctuation">{</span> a<span class="token operator">/</span>b <span class="token punctuation">:</span> a <span class="token keyword">in</span> <span class="token punctuation">{</span> <span class="token number">0</span><span class="token operator">..</span>n <span class="token punctuation">}</span><span class="token punctuation">,</span> b <span class="token keyword">in</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token operator">..</span>n <span class="token punctuation">}</span> <span class="token operator">|</span> a <span class="token keyword">le</span> b <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">></span><span class="token punctuation">;</span>
<span class="token punctuation">></span> <span class="token function">farey</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token output">[ 0, 1/6, 1/5, 1/4, 1/3, 2/5, 1/2, 3/5, 2/3, 3/4, 4/5, 5/6, 1 ]</span>

----------------------------------------------------