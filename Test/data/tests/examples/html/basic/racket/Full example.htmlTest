; Source: https://github.com/mbutterick/pollen/blob/master/pollen/private/to-string.rkt

#lang racket/base
(provide (all-defined-out))

(define (to-string x)
  (cond
    [(string? x) x]
    [(or (null? x) (void? x)) ""]
    [(or (symbol? x) (number? x) (path? x) (char? x)) (format "~a" x)]
    ;; special handling for procedures, because if a procedure reaches this func,
    ;; it usually indicates a failed attempt to use a tag function.
    ;; meaning, it's more useful to raise an error.
    [(procedure? x) (error 'pollen "Can't convert procedure ~a to string" x)]
    [else (format "~v" x)]))
----------------------------------------------------
<span class="token comment">; Source: https://github.com/mbutterick/pollen/blob/master/pollen/private/to-string.rkt</span>

<span class="token lang keyword">#lang racket/base</span>
<span class="token punctuation">(</span><span class="token function">provide</span> <span class="token punctuation">(</span><span class="token function">all-defined-out</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token punctuation">(</span><span class="token keyword">define</span> <span class="token punctuation">(</span><span class="token function">to-string</span> x<span class="token punctuation">)</span>
  <span class="token punctuation">(</span><span class="token keyword">cond</span>
    <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">string?</span> x<span class="token punctuation">)</span> x<span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">or</span> <span class="token punctuation">(</span><span class="token builtin">null?</span> x<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token function">void?</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token string">""</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">or</span> <span class="token punctuation">(</span><span class="token builtin">symbol?</span> x<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">number?</span> x<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token function">path?</span> x<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">char?</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token function">format</span> <span class="token string">"~a"</span> x<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token comment">;; special handling for procedures, because if a procedure reaches this func,</span>
    <span class="token comment">;; it usually indicates a failed attempt to use a tag function.</span>
    <span class="token comment">;; meaning, it's more useful to raise an error.</span>
    <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">procedure?</span> x<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">error</span> <span class="token symbol">'pollen</span> <span class="token string">"Can't convert procedure ~a to string"</span> x<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token keyword">else</span> <span class="token punctuation">(</span><span class="token function">format</span> <span class="token string">"~v"</span> x<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

----------------------------------------------------