// source: https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_shopping_cart_example_code.htm

trigger calculate on Item__c (after insert, after update, after delete) {

// Use a map because it doesn't allow duplicate values

Map<ID, Shipping_Invoice__C> updateMap = new Map<ID, Shipping_Invoice__C>();

// Set this integer to -1 if we are deleting
Integer subtract ;

// Populate the list of items based on trigger type
List<Item__c> itemList;
	if(trigger.isInsert || trigger.isUpdate){
		itemList = Trigger.new;
		subtract = 1;
	}
	else if(trigger.isDelete)
	{
		// Note -- there is no trigger.new in delete
		itemList = trigger.old;
		subtract = -1;
	}

// Access all the information we need in a single query
// rather than querying when we need it.
// This is a best practice for bulkifying requests

set<Id> AllItems = new set<id>();

for(item__c i :itemList){
// Assert numbers are not negative.
// None of the fields would make sense with a negative value

System.assert(i.quantity__c > 0, 'Quantity must be positive');
System.assert(i.weight__c >= 0, 'Weight must be non-negative');
System.assert(i.price__c >= 0, 'Price must be non-negative');

// If there is a duplicate Id, it won't get added to a set
AllItems.add(i.Shipping_Invoice__C);
}

// Accessing all shipping invoices associated with the items in the trigger
List<Shipping_Invoice__C> AllShippingInvoices = [SELECT Id, ShippingDiscount__c,
                   SubTotal__c, TotalWeight__c, Tax__c, GrandTotal__c
                   FROM Shipping_Invoice__C WHERE Id IN :AllItems];

// Take the list we just populated and put it into a Map.
// This will make it easier to look up a shipping invoice
// because you must iterate a list, but you can use lookup for a map,
Map<ID, Shipping_Invoice__C> SIMap = new Map<ID, Shipping_Invoice__C>();

for(Shipping_Invoice__C sc : AllShippingInvoices)
{
	SIMap.put(sc.id, sc);
}

// Process the list of items
	if(Trigger.isUpdate)
	{
		// Treat updates like a removal of the old item and addition of the
		// revised item rather than figuring out the differences of each field
		// and acting accordingly.
		// Note updates have both trigger.new and trigger.old
		for(Integer x = 0; x < Trigger.old.size(); x++)
		{
			Shipping_Invoice__C myOrder;
			myOrder = SIMap.get(trigger.old[x].Shipping_Invoice__C);

			// Decrement the previous value from the subtotal and weight.
			myOrder.SubTotal__c -= (trigger.old[x].price__c *
			                        trigger.old[x].quantity__c);
			myOrder.TotalWeight__c -= (trigger.old[x].weight__c *
			                           trigger.old[x].quantity__c);

			// Increment the new subtotal and weight.
			myOrder.SubTotal__c += (trigger.new[x].price__c *
			                        trigger.new[x].quantity__c);
			myOrder.TotalWeight__c += (trigger.new[x].weight__c *
			                           trigger.new[x].quantity__c);
		}

		for(Shipping_Invoice__C myOrder : AllShippingInvoices)
		{

			// Set tax rate to 9.25%  Please note, this is a simple example.
			// Generally, you would never hard code values.
			// Leveraging Custom Settings for tax rates is a best practice.
			// See Custom Settings in the Apex Developer Guide
			// for more information.
			myOrder.Tax__c = myOrder.Subtotal__c * .0925;

			// Reset the shipping discount
			myOrder.ShippingDiscount__c = 0;

			// Set shipping rate to 75 cents per pound.
			// Generally, you would never hard code values.
			// Leveraging Custom Settings for the shipping rate is a best practice.
			// See Custom Settings in the Apex Developer Guide
			// for more information.
			myOrder.Shipping__c = (myOrder.totalWeight__c * .75);
			myOrder.GrandTotal__c = myOrder.SubTotal__c + myOrder.tax__c +
			                        myOrder.Shipping__c;
			updateMap.put(myOrder.id, myOrder);
		}
	}
	else
	{
		for(Item__c itemToProcess : itemList)
		{
			Shipping_Invoice__C myOrder;

			// Look up the correct shipping invoice from the ones we got earlier
			myOrder = SIMap.get(itemToProcess.Shipping_Invoice__C);
			myOrder.SubTotal__c += (itemToProcess.price__c *
			                        itemToProcess.quantity__c * subtract);
			myOrder.TotalWeight__c += (itemToProcess.weight__c *
			                           itemToProcess.quantity__c * subtract);
		}

		for(Shipping_Invoice__C myOrder : AllShippingInvoices)
		{

			// Set tax rate to 9.25%  Please note, this is a simple example.
			// Generally, you would never hard code values.
			// Leveraging Custom Settings for tax rates is a best practice.
			// See Custom Settings in the Apex Developer Guide
			// for more information.
			myOrder.Tax__c = myOrder.Subtotal__c * .0925;

			// Reset shipping discount
			myOrder.ShippingDiscount__c = 0;

			// Set shipping rate to 75 cents per pound.
			// Generally, you would never hard code values.
			// Leveraging Custom Settings for the shipping rate is a best practice.
			// See Custom Settings in the Apex Developer Guide
			// for more information.
			myOrder.Shipping__c = (myOrder.totalWeight__c * .75);
			myOrder.GrandTotal__c = myOrder.SubTotal__c + myOrder.tax__c +
			                        myOrder.Shipping__c;

			updateMap.put(myOrder.id, myOrder);

		}
	}

	// Only use one DML update at the end.
	// This minimizes the number of DML requests generated from this trigger.
	update updateMap.values();
}
----------------------------------------------------
[
	["comment", "// source: https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_shopping_cart_example_code.htm"],

	["keyword", "trigger"],
	["trigger", "calculate"],
	["keyword", "on"],
	["class-name", ["Item__c"]],
	["punctuation", "("],
	["keyword", "after"],
	["keyword", "insert"],
	["punctuation", ","],
	["keyword", "after"],
	["keyword", "update"],
	["punctuation", ","],
	["keyword", "after"],
	["keyword", "delete"],
	["punctuation", ")"],
	["punctuation", "{"],

	["comment", "// Use a map because it doesn't allow duplicate values"],

	["class-name", [
		["keyword", "Map"],
		["punctuation", "<"],
		"ID",
		["punctuation", ","],
		" Shipping_Invoice__C",
		["punctuation", ">"]
	]],
	" updateMap ",
	["operator", "="],
	["keyword", "new"],
	["class-name", [
		["keyword", "Map"],
		["punctuation", "<"],
		"ID",
		["punctuation", ","],
		" Shipping_Invoice__C",
		["punctuation", ">"]
	]],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", ";"],

	["comment", "// Set this integer to -1 if we are deleting"],
	["keyword", "Integer"], " subtract ", ["punctuation", ";"],

	["comment", "// Populate the list of items based on trigger type"],

	["class-name", [
		["keyword", "List"],
		["punctuation", "<"],
		"Item__c",
		["punctuation", ">"]
	]],
	" itemList",
	["punctuation", ";"],

	["keyword", "if"],
	["punctuation", "("],
	["keyword", "trigger"],
	["punctuation", "."],
	"isInsert ",
	["operator", "||"],
	["keyword", "trigger"],
	["punctuation", "."],
	"isUpdate",
	["punctuation", ")"],
	["punctuation", "{"],

	"\n\t\titemList ",
	["operator", "="],
	["keyword", "Trigger"],
	["punctuation", "."],
	["keyword", "new"],
	["punctuation", ";"],

	"\n\t\tsubtract ",
	["operator", "="],
	["number", "1"],
	["punctuation", ";"],

	["punctuation", "}"],

	["keyword", "else"],
	["keyword", "if"],
	["punctuation", "("],
	["keyword", "trigger"],
	["punctuation", "."],
	"isDelete",
	["punctuation", ")"],

	["punctuation", "{"],

	["comment", "// Note -- there is no trigger.new in delete"],

	"\n\t\titemList ",
	["operator", "="],
	["keyword", "trigger"],
	["punctuation", "."],
	"old",
	["punctuation", ";"],

	"\n\t\tsubtract ",
	["operator", "="],
	["operator", "-"],
	["number", "1"],
	["punctuation", ";"],

	["punctuation", "}"],

	["comment", "// Access all the information we need in a single query"],
	["comment", "// rather than querying when we need it."],
	["comment", "// This is a best practice for bulkifying requests"],

	["class-name", [
		["keyword", "set"],
		["punctuation", "<"],
		"Id",
		["punctuation", ">"]
	]],
	" AllItems ",
	["operator", "="],
	["keyword", "new"],
	["class-name", [
		["keyword", "set"],
		["punctuation", "<"],
		"id",
		["punctuation", ">"]
	]],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "for"],
	["punctuation", "("],
	["class-name", ["item__c"]],
	" i ",
	["operator", ":"],
	"itemList",
	["punctuation", ")"],
	["punctuation", "{"],

	["comment", "// Assert numbers are not negative."],

	["comment", "// None of the fields would make sense with a negative value"],

	["keyword", "System"],
	["punctuation", "."],
	["function", "assert"],
	["punctuation", "("],
	"i",
	["punctuation", "."],
	"quantity__c ",
	["operator", ">"],
	["number", "0"],
	["punctuation", ","],
	["string", "'Quantity must be positive'"],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "System"],
	["punctuation", "."],
	["function", "assert"],
	["punctuation", "("],
	"i",
	["punctuation", "."],
	"weight__c ",
	["operator", ">="],
	["number", "0"],
	["punctuation", ","],
	["string", "'Weight must be non-negative'"],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "System"],
	["punctuation", "."],
	["function", "assert"],
	["punctuation", "("],
	"i",
	["punctuation", "."],
	"price__c ",
	["operator", ">="],
	["number", "0"],
	["punctuation", ","],
	["string", "'Price must be non-negative'"],
	["punctuation", ")"],
	["punctuation", ";"],

	["comment", "// If there is a duplicate Id, it won't get added to a set"],

	"\nAllItems",
	["punctuation", "."],
	["function", "add"],
	["punctuation", "("],
	"i",
	["punctuation", "."],
	"Shipping_Invoice__C",
	["punctuation", ")"],
	["punctuation", ";"],

	["punctuation", "}"],

	["comment", "// Accessing all shipping invoices associated with the items in the trigger"],

	["class-name", [
		["keyword", "List"],
		["punctuation", "<"],
		"Shipping_Invoice__C",
		["punctuation", ">"]
	]],
	" AllShippingInvoices ",
	["operator", "="],
	["sql", [
		["punctuation", "["],
		["keyword", "SELECT"],
		" Id",
		["punctuation", ","],
		" ShippingDiscount__c",
		["punctuation", ","],

		"\n                   SubTotal__c",
		["punctuation", ","],
		" TotalWeight__c",
		["punctuation", ","],
		" Tax__c",
		["punctuation", ","],
		" GrandTotal__c\n                   ",

		["keyword", "FROM"],
		" Shipping_Invoice__C ",
		["keyword", "WHERE"],
		" Id ",
		["operator", "IN"],
		" :AllItems",
		["punctuation", "]"]
	]],
	["punctuation", ";"],

	["comment", "// Take the list we just populated and put it into a Map."],

	["comment", "// This will make it easier to look up a shipping invoice"],

	["comment", "// because you must iterate a list, but you can use lookup for a map,"],

	["class-name", [
		["keyword", "Map"],
		["punctuation", "<"],
		"ID",
		["punctuation", ","],
		" Shipping_Invoice__C",
		["punctuation", ">"]
	]],
	" SIMap ",
	["operator", "="],
	["keyword", "new"],
	["class-name", [
		["keyword", "Map"],
		["punctuation", "<"],
		"ID",
		["punctuation", ","],
		" Shipping_Invoice__C",
		["punctuation", ">"]
	]],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "for"],
	["punctuation", "("],
	["class-name", ["Shipping_Invoice__C"]],
	" sc ",
	["operator", ":"],
	" AllShippingInvoices",
	["punctuation", ")"],

	["punctuation", "{"],

	"\n\tSIMap",
	["punctuation", "."],
	["function", "put"],
	["punctuation", "("],
	"sc",
	["punctuation", "."],
	"id",
	["punctuation", ","],
	" sc",
	["punctuation", ")"],
	["punctuation", ";"],

	["punctuation", "}"],

	["comment", "// Process the list of items"],

	["keyword", "if"],
	["punctuation", "("],
	["keyword", "Trigger"],
	["punctuation", "."],
	"isUpdate",
	["punctuation", ")"],

	["punctuation", "{"],

	["comment", "// Treat updates like a removal of the old item and addition of the"],

	["comment", "// revised item rather than figuring out the differences of each field"],

	["comment", "// and acting accordingly."],

	["comment", "// Note updates have both trigger.new and trigger.old"],

	["keyword", "for"],
	["punctuation", "("],
	["keyword", "Integer"],
	" x ",
	["operator", "="],
	["number", "0"],
	["punctuation", ";"],
	" x ",
	["operator", "<"],
	["keyword", "Trigger"],
	["punctuation", "."],
	"old",
	["punctuation", "."],
	["function", "size"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", ";"],
	" x",
	["operator", "++"],
	["punctuation", ")"],

	["punctuation", "{"],

	["class-name", ["Shipping_Invoice__C"]],
	" myOrder",
	["punctuation", ";"],

	"\n\t\t\tmyOrder ",
	["operator", "="],
	" SIMap",
	["punctuation", "."],
	["function", "get"],
	["punctuation", "("],
	["keyword", "trigger"],
	["punctuation", "."],
	"old",
	["punctuation", "["],
	"x",
	["punctuation", "]"],
	["punctuation", "."],
	"Shipping_Invoice__C",
	["punctuation", ")"],
	["punctuation", ";"],

	["comment", "// Decrement the previous value from the subtotal and weight."],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"SubTotal__c ",
	["operator", "-="],
	["punctuation", "("],
	["keyword", "trigger"],
	["punctuation", "."],
	"old",
	["punctuation", "["],
	"x",
	["punctuation", "]"],
	["punctuation", "."],
	"price__c ",
	["operator", "*"],

	["keyword", "trigger"],
	["punctuation", "."],
	"old",
	["punctuation", "["],
	"x",
	["punctuation", "]"],
	["punctuation", "."],
	"quantity__c",
	["punctuation", ")"],
	["punctuation", ";"],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"TotalWeight__c ",
	["operator", "-="],
	["punctuation", "("],
	["keyword", "trigger"],
	["punctuation", "."],
	"old",
	["punctuation", "["],
	"x",
	["punctuation", "]"],
	["punctuation", "."],
	"weight__c ",
	["operator", "*"],

	["keyword", "trigger"],
	["punctuation", "."],
	"old",
	["punctuation", "["],
	"x",
	["punctuation", "]"],
	["punctuation", "."],
	"quantity__c",
	["punctuation", ")"],
	["punctuation", ";"],

	["comment", "// Increment the new subtotal and weight."],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"SubTotal__c ",
	["operator", "+="],
	["punctuation", "("],
	["keyword", "trigger"],
	["punctuation", "."],
	["keyword", "new"],
	["punctuation", "["],
	"x",
	["punctuation", "]"],
	["punctuation", "."],
	"price__c ",
	["operator", "*"],

	["keyword", "trigger"],
	["punctuation", "."],
	["keyword", "new"],
	["punctuation", "["],
	"x",
	["punctuation", "]"],
	["punctuation", "."],
	"quantity__c",
	["punctuation", ")"],
	["punctuation", ";"],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"TotalWeight__c ",
	["operator", "+="],
	["punctuation", "("],
	["keyword", "trigger"],
	["punctuation", "."],
	["keyword", "new"],
	["punctuation", "["],
	"x",
	["punctuation", "]"],
	["punctuation", "."],
	"weight__c ",
	["operator", "*"],

	["keyword", "trigger"],
	["punctuation", "."],
	["keyword", "new"],
	["punctuation", "["],
	"x",
	["punctuation", "]"],
	["punctuation", "."],
	"quantity__c",
	["punctuation", ")"],
	["punctuation", ";"],

	["punctuation", "}"],

	["keyword", "for"],
	["punctuation", "("],
	["class-name", ["Shipping_Invoice__C"]],
	" myOrder ",
	["operator", ":"],
	" AllShippingInvoices",
	["punctuation", ")"],

	["punctuation", "{"],

	["comment", "// Set tax rate to 9.25%  Please note, this is a simple example."],

	["comment", "// Generally, you would never hard code values."],

	["comment", "// Leveraging Custom Settings for tax rates is a best practice."],

	["comment", "// See Custom Settings in the Apex Developer Guide"],

	["comment", "// for more information."],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"Tax__c ",
	["operator", "="],
	" myOrder",
	["punctuation", "."],
	"Subtotal__c ",
	["operator", "*"],
	["number", ".0925"],
	["punctuation", ";"],

	["comment", "// Reset the shipping discount"],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"ShippingDiscount__c ",
	["operator", "="],
	["number", "0"],
	["punctuation", ";"],

	["comment", "// Set shipping rate to 75 cents per pound."],

	["comment", "// Generally, you would never hard code values."],

	["comment", "// Leveraging Custom Settings for the shipping rate is a best practice."],

	["comment", "// See Custom Settings in the Apex Developer Guide"],

	["comment", "// for more information."],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"Shipping__c ",
	["operator", "="],
	["punctuation", "("],
	"myOrder",
	["punctuation", "."],
	"totalWeight__c ",
	["operator", "*"],
	["number", ".75"],
	["punctuation", ")"],
	["punctuation", ";"],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"GrandTotal__c ",
	["operator", "="],
	" myOrder",
	["punctuation", "."],
	"SubTotal__c ",
	["operator", "+"],
	" myOrder",
	["punctuation", "."],
	"tax__c ",
	["operator", "+"],

	"\n\t\t\t                        myOrder",
	["punctuation", "."],
	"Shipping__c",
	["punctuation", ";"],

	"\n\t\t\tupdateMap",
	["punctuation", "."],
	["function", "put"],
	["punctuation", "("],
	"myOrder",
	["punctuation", "."],
	"id",
	["punctuation", ","],
	" myOrder",
	["punctuation", ")"],
	["punctuation", ";"],

	["punctuation", "}"],

	["punctuation", "}"],

	["keyword", "else"],

	["punctuation", "{"],

	["keyword", "for"],
	["punctuation", "("],
	["class-name", ["Item__c"]],
	" itemToProcess ",
	["operator", ":"],
	" itemList",
	["punctuation", ")"],

	["punctuation", "{"],

	["class-name", ["Shipping_Invoice__C"]],
	" myOrder",
	["punctuation", ";"],

	["comment", "// Look up the correct shipping invoice from the ones we got earlier"],

	"\n\t\t\tmyOrder ",
	["operator", "="],
	" SIMap",
	["punctuation", "."],
	["function", "get"],
	["punctuation", "("],
	"itemToProcess",
	["punctuation", "."],
	"Shipping_Invoice__C",
	["punctuation", ")"],
	["punctuation", ";"],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"SubTotal__c ",
	["operator", "+="],
	["punctuation", "("],
	"itemToProcess",
	["punctuation", "."],
	"price__c ",
	["operator", "*"],

	"\n\t\t\t                        itemToProcess",
	["punctuation", "."],
	"quantity__c ",
	["operator", "*"],
	" subtract",
	["punctuation", ")"],
	["punctuation", ";"],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"TotalWeight__c ",
	["operator", "+="],
	["punctuation", "("],
	"itemToProcess",
	["punctuation", "."],
	"weight__c ",
	["operator", "*"],

	"\n\t\t\t                           itemToProcess",
	["punctuation", "."],
	"quantity__c ",
	["operator", "*"],
	" subtract",
	["punctuation", ")"],
	["punctuation", ";"],

	["punctuation", "}"],

	["keyword", "for"],
	["punctuation", "("],
	["class-name", ["Shipping_Invoice__C"]],
	" myOrder ",
	["operator", ":"],
	" AllShippingInvoices",
	["punctuation", ")"],

	["punctuation", "{"],

	["comment", "// Set tax rate to 9.25%  Please note, this is a simple example."],

	["comment", "// Generally, you would never hard code values."],

	["comment", "// Leveraging Custom Settings for tax rates is a best practice."],

	["comment", "// See Custom Settings in the Apex Developer Guide"],

	["comment", "// for more information."],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"Tax__c ",
	["operator", "="],
	" myOrder",
	["punctuation", "."],
	"Subtotal__c ",
	["operator", "*"],
	["number", ".0925"],
	["punctuation", ";"],

	["comment", "// Reset shipping discount"],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"ShippingDiscount__c ",
	["operator", "="],
	["number", "0"],
	["punctuation", ";"],

	["comment", "// Set shipping rate to 75 cents per pound."],

	["comment", "// Generally, you would never hard code values."],

	["comment", "// Leveraging Custom Settings for the shipping rate is a best practice."],

	["comment", "// See Custom Settings in the Apex Developer Guide"],

	["comment", "// for more information."],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"Shipping__c ",
	["operator", "="],
	["punctuation", "("],
	"myOrder",
	["punctuation", "."],
	"totalWeight__c ",
	["operator", "*"],
	["number", ".75"],
	["punctuation", ")"],
	["punctuation", ";"],

	"\n\t\t\tmyOrder",
	["punctuation", "."],
	"GrandTotal__c ",
	["operator", "="],
	" myOrder",
	["punctuation", "."],
	"SubTotal__c ",
	["operator", "+"],
	" myOrder",
	["punctuation", "."],
	"tax__c ",
	["operator", "+"],

	"\n\t\t\t                        myOrder",
	["punctuation", "."],
	"Shipping__c",
	["punctuation", ";"],

	"\n\n\t\t\tupdateMap",
	["punctuation", "."],
	["function", "put"],
	["punctuation", "("],
	"myOrder",
	["punctuation", "."],
	"id",
	["punctuation", ","],
	" myOrder",
	["punctuation", ")"],
	["punctuation", ";"],

	["punctuation", "}"],
	["punctuation", "}"],

	["comment", "// Only use one DML update at the end."],

	["comment", "// This minimizes the number of DML requests generated from this trigger."],

	["keyword", "update"],
	" updateMap",
	["punctuation", "."],
	["function", "values"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", ";"],

	["punctuation", "}"]
]

----------------------------------------------------