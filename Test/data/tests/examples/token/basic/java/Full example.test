import java.util.Scanner;

public class Life {

    @Override @Bind("One")
    public void show(boolean[][] grid){
        String s = "";
        for(boolean[] row : grid){
            for(boolean val : row)
                if(val)
                    s += "*";
                else
                    s += ".";
            s += "\n";
        }
        System.out.println(s);
    }

    public static boolean[][] gen(){
        boolean[][] grid = new boolean[10][10];
        for(int r = 0; r < 10; r++)
            for(int c = 0; c < 10; c++)
                if( Math.random() > 0.7 )
                    grid[r][c] = true;
        return grid;
    }

    public static void main(String[] args){
        boolean[][] world = gen();
        show(world);
        System.out.println();
        world = nextGen(world);
        show(world);
        Scanner s = new Scanner(System.in);
        while(s.nextLine().length() == 0){
            System.out.println();
            world = nextGen(world);
            show(world);

        }
    }

	// [...]
}
----------------------------------------------------
[
	["keyword", "import"],
	["namespace", [
		"java",
		["punctuation", "."],
		"util",
		["punctuation", "."]
	]],
	["class-name", ["Scanner"]],
	["punctuation", ";"],

	["keyword", "public"],
	["keyword", "class"],
	["class-name", ["Life"]],
	["punctuation", "{"],

	["annotation", "@Override"],
	["annotation", "@Bind"],
	["punctuation", "("],
	["string", "\"One\""],
	["punctuation", ")"],

	["keyword", "public"],
	["keyword", "void"],
	["function", "show"],
	["punctuation", "("],
	["keyword", "boolean"],
	["punctuation", "["],
	["punctuation", "]"],
	["punctuation", "["],
	["punctuation", "]"],
	" grid",
	["punctuation", ")"],
	["punctuation", "{"],

	["class-name", ["String"]],
	" s ",
	["operator", "="],
	["string", "\"\""],
	["punctuation", ";"],

	["keyword", "for"],
	["punctuation", "("],
	["keyword", "boolean"],
	["punctuation", "["],
	["punctuation", "]"],
	" row ",
	["operator", ":"],
	" grid",
	["punctuation", ")"],
	["punctuation", "{"],

	["keyword", "for"],
	["punctuation", "("],
	["keyword", "boolean"],
	" val ",
	["operator", ":"],
	" row",
	["punctuation", ")"],

	["keyword", "if"],
	["punctuation", "("],
	"val",
	["punctuation", ")"],

	"\n                    s ",
	["operator", "+="],
	["string", "\"*\""],
	["punctuation", ";"],

	["keyword", "else"],

	"\n                    s ",
	["operator", "+="],
	["string", "\".\""],
	["punctuation", ";"],

	"\n            s ",
	["operator", "+="],
	["string", "\"\\n\""],
	["punctuation", ";"],

	["punctuation", "}"],

	["class-name", ["System"]],
	["punctuation", "."],
	"out",
	["punctuation", "."],
	["function", "println"],
	["punctuation", "("],
	"s",
	["punctuation", ")"],
	["punctuation", ";"],

	["punctuation", "}"],

	["keyword", "public"],
	["keyword", "static"],
	["keyword", "boolean"],
	["punctuation", "["],
	["punctuation", "]"],
	["punctuation", "["],
	["punctuation", "]"],
	["function", "gen"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", "{"],

	["keyword", "boolean"],
	["punctuation", "["],
	["punctuation", "]"],
	["punctuation", "["],
	["punctuation", "]"],
	" grid ",
	["operator", "="],
	["keyword", "new"],
	["keyword", "boolean"],
	["punctuation", "["],
	["number", "10"],
	["punctuation", "]"],
	["punctuation", "["],
	["number", "10"],
	["punctuation", "]"],
	["punctuation", ";"],

	["keyword", "for"],
	["punctuation", "("],
	["keyword", "int"],
	" r ",
	["operator", "="],
	["number", "0"],
	["punctuation", ";"],
	" r ",
	["operator", "<"],
	["number", "10"],
	["punctuation", ";"],
	" r",
	["operator", "++"],
	["punctuation", ")"],

	["keyword", "for"],
	["punctuation", "("],
	["keyword", "int"],
	" c ",
	["operator", "="],
	["number", "0"],
	["punctuation", ";"],
	" c ",
	["operator", "<"],
	["number", "10"],
	["punctuation", ";"],
	" c",
	["operator", "++"],
	["punctuation", ")"],

	["keyword", "if"],
	["punctuation", "("],
	["class-name", ["Math"]],
	["punctuation", "."],
	["function", "random"],
	["punctuation", "("],
	["punctuation", ")"],
	["operator", ">"],
	["number", "0.7"],
	["punctuation", ")"],

	"\n                    grid",
	["punctuation", "["],
	"r",
	["punctuation", "]"],
	["punctuation", "["],
	"c",
	["punctuation", "]"],
	["operator", "="],
	["boolean", "true"],
	["punctuation", ";"],

	["keyword", "return"],
	" grid",
	["punctuation", ";"],

	["punctuation", "}"],

	["keyword", "public"],
	["keyword", "static"],
	["keyword", "void"],
	["function", "main"],
	["punctuation", "("],
	["class-name", ["String"]],
	["punctuation", "["],
	["punctuation", "]"],
	" args",
	["punctuation", ")"],
	["punctuation", "{"],

	["keyword", "boolean"],
	["punctuation", "["],
	["punctuation", "]"],
	["punctuation", "["],
	["punctuation", "]"],
	" world ",
	["operator", "="],
	["function", "gen"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", ";"],

	["function", "show"],
	["punctuation", "("],
	"world",
	["punctuation", ")"],
	["punctuation", ";"],

	["class-name", ["System"]],
	["punctuation", "."],
	"out",
	["punctuation", "."],
	["function", "println"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", ";"],

	"\n        world ",
	["operator", "="],
	["function", "nextGen"],
	["punctuation", "("],
	"world",
	["punctuation", ")"],
	["punctuation", ";"],

	["function", "show"],
	["punctuation", "("],
	"world",
	["punctuation", ")"],
	["punctuation", ";"],

	["class-name", ["Scanner"]],
	" s ",
	["operator", "="],
	["keyword", "new"],
	["class-name", ["Scanner"]],
	["punctuation", "("],
	["class-name", ["System"]],
	["punctuation", "."],
	"in",
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "while"],
	["punctuation", "("],
	"s",
	["punctuation", "."],
	["function", "nextLine"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", "."],
	["function", "length"],
	["punctuation", "("],
	["punctuation", ")"],
	["operator", "=="],
	["number", "0"],
	["punctuation", ")"],
	["punctuation", "{"],

	["class-name", ["System"]],
	["punctuation", "."],
	"out",
	["punctuation", "."],
	["function", "println"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", ";"],

	"\n            world ",
	["operator", "="],
	["function", "nextGen"],
	["punctuation", "("],
	"world",
	["punctuation", ")"],
	["punctuation", ";"],

	["function", "show"],
	["punctuation", "("],
	"world",
	["punctuation", ")"],
	["punctuation", ";"],

	["punctuation", "}"],
	["punctuation", "}"],

	["comment", "// [...]"],
	["punctuation", "}"]
]

----------------------------------------------------