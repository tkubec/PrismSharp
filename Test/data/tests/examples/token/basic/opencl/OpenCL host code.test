// OpenCL functions, constants, etc. are also highlighted in OpenCL host code in the c or cpp language
cl::Event KernelFilterImages::runSingle(const cl::Image2D& imgSrc, SPImage2D& imgDst)
{
	const size_t rows = imgSrc.getImageInfo<CL_IMAGE_HEIGHT>();
	const size_t cols = imgSrc.getImageInfo<CL_IMAGE_WIDTH>();

	ASSERT(rows > 0 && cols > 0, "The image object seems to be invalid, no rows/cols set");
	ASSERT(imgSrc.getImageInfo<CL_IMAGE_FORMAT>().image_channel_data_type == CL_FLOAT, "Only float type images are supported");
	ASSERT(imgSrc.getInfo<CL_MEM_FLAGS>() == CL_MEM_READ_ONLY || imgSrc.getInfo<CL_MEM_FLAGS>() == CL_MEM_READ_WRITE, "Can't read the input image");

	imgDst = std::make_shared<cl::Image2D>(*context, CL_MEM_READ_WRITE, cl::ImageFormat(CL_R, CL_FLOAT), cols, rows);

	cl::Kernel kernel(*program, "filter_single");
	kernel.setArg(0, imgSrc);
	kernel.setArg(1, *imgDst);
	kernel.setArg(2, bufferKernel1);
	kernel.setArg(3, kernel1.rows);
	kernel.setArg(4, kernel1.rows / 2);
	kernel.setArg(5, kernel1.cols);
	kernel.setArg(6, kernel1.cols / 2);
	kernel.setArg(7, border);

	cl::Event eventFilter;
	const cl::NDRange global(cols, rows);
	queue->enqueueNDRangeKernel(kernel, cl::NullRange, global, cl::NullRange, &events, &eventFilter);
}
----------------------------------------------------
[
	["comment", "// OpenCL functions, constants, etc. are also highlighted in OpenCL host code in the c or cpp language"],

	"\ncl",
	["operator", "::"],
	"Event KernelFilterImages",
	["operator", "::"],
	["function", "runSingle"],
	["punctuation", "("],
	["keyword", "const"],
	" cl",
	["operator", "::"],
	"Image2D",
	["operator", "&"],
	" imgSrc",
	["punctuation", ","],
	" SPImage2D",
	["operator", "&"],
	" imgDst",
	["punctuation", ")"],

	["punctuation", "{"],

	["keyword", "const"],
	["builtin-type", "size_t"],
	" rows ",
	["operator", "="],
	" imgSrc",
	["punctuation", "."],
	"getImageInfo",
	["operator", "<"],
	"CL_IMAGE_HEIGHT",
	["operator", ">"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "const"],
	["builtin-type", "size_t"],
	" cols ",
	["operator", "="],
	" imgSrc",
	["punctuation", "."],
	"getImageInfo",
	["operator", "<"],
	"CL_IMAGE_WIDTH",
	["operator", ">"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", ";"],

	["function", "ASSERT"],
	["punctuation", "("],
	"rows ",
	["operator", ">"],
	["number", "0"],
	["operator", "&&"],
	" cols ",
	["operator", ">"],
	["number", "0"],
	["punctuation", ","],
	["string", "\"The image object seems to be invalid, no rows/cols set\""],
	["punctuation", ")"],
	["punctuation", ";"],

	["function", "ASSERT"],
	["punctuation", "("],
	"imgSrc",
	["punctuation", "."],
	"getImageInfo",
	["operator", "<"],
	"CL_IMAGE_FORMAT",
	["operator", ">"],
	["punctuation", "("],
	["punctuation", ")"],
	["punctuation", "."],
	"image_channel_data_type ",
	["operator", "=="],
	["constant-opencl-kernel", "CL_FLOAT"],
	["punctuation", ","],
	["string", "\"Only float type images are supported\""],
	["punctuation", ")"],
	["punctuation", ";"],

	["function", "ASSERT"],
	["punctuation", "("],
	"imgSrc",
	["punctuation", "."],
	"getInfo",
	["operator", "<"],
	"CL_MEM_FLAGS",
	["operator", ">"],
	["punctuation", "("],
	["punctuation", ")"],
	["operator", "=="],
	" CL_MEM_READ_ONLY ",
	["operator", "||"],
	" imgSrc",
	["punctuation", "."],
	"getInfo",
	["operator", "<"],
	"CL_MEM_FLAGS",
	["operator", ">"],
	["punctuation", "("],
	["punctuation", ")"],
	["operator", "=="],
	" CL_MEM_READ_WRITE",
	["punctuation", ","],
	["string", "\"Can't read the input image\""],
	["punctuation", ")"],
	["punctuation", ";"],

	"\n\n\timgDst ",
	["operator", "="],
	" std",
	["operator", "::"],
	"make_shared",
	["operator", "<"],
	"cl",
	["operator", "::"],
	"Image2D",
	["operator", ">"],
	["punctuation", "("],
	["operator", "*"],
	"context",
	["punctuation", ","],
	" CL_MEM_READ_WRITE",
	["punctuation", ","],
	" cl",
	["operator", "::"],
	["function", "ImageFormat"],
	["punctuation", "("],
	["constant-opencl-kernel", "CL_R"],
	["punctuation", ","],
	["constant-opencl-kernel", "CL_FLOAT"],
	["punctuation", ")"],
	["punctuation", ","],
	" cols",
	["punctuation", ","],
	" rows",
	["punctuation", ")"],
	["punctuation", ";"],

	"\n\n\tcl",
	["operator", "::"],
	"Kernel ",
	["keyword", "kernel"],
	["punctuation", "("],
	["operator", "*"],
	"program",
	["punctuation", ","],
	["string", "\"filter_single\""],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "kernel"],
	["punctuation", "."],
	["function", "setArg"],
	["punctuation", "("],
	["number", "0"],
	["punctuation", ","],
	" imgSrc",
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "kernel"],
	["punctuation", "."],
	["function", "setArg"],
	["punctuation", "("],
	["number", "1"],
	["punctuation", ","],
	["operator", "*"],
	"imgDst",
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "kernel"],
	["punctuation", "."],
	["function", "setArg"],
	["punctuation", "("],
	["number", "2"],
	["punctuation", ","],
	" bufferKernel1",
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "kernel"],
	["punctuation", "."],
	["function", "setArg"],
	["punctuation", "("],
	["number", "3"],
	["punctuation", ","],
	" kernel1",
	["punctuation", "."],
	"rows",
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "kernel"],
	["punctuation", "."],
	["function", "setArg"],
	["punctuation", "("],
	["number", "4"],
	["punctuation", ","],
	" kernel1",
	["punctuation", "."],
	"rows ",
	["operator", "/"],
	["number", "2"],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "kernel"],
	["punctuation", "."],
	["function", "setArg"],
	["punctuation", "("],
	["number", "5"],
	["punctuation", ","],
	" kernel1",
	["punctuation", "."],
	"cols",
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "kernel"],
	["punctuation", "."],
	["function", "setArg"],
	["punctuation", "("],
	["number", "6"],
	["punctuation", ","],
	" kernel1",
	["punctuation", "."],
	"cols ",
	["operator", "/"],
	["number", "2"],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "kernel"],
	["punctuation", "."],
	["function", "setArg"],
	["punctuation", "("],
	["number", "7"],
	["punctuation", ","],
	" border",
	["punctuation", ")"],
	["punctuation", ";"],

	"\n\n\tcl",
	["operator", "::"],
	"Event eventFilter",
	["punctuation", ";"],

	["keyword", "const"],
	" cl",
	["operator", "::"],
	"NDRange ",
	["keyword", "global"],
	["punctuation", "("],
	"cols",
	["punctuation", ","],
	" rows",
	["punctuation", ")"],
	["punctuation", ";"],

	"\n\tqueue",
	["operator", "->"],
	["function", "enqueueNDRangeKernel"],
	["punctuation", "("],
	["keyword", "kernel"],
	["punctuation", ","],
	" cl",
	["operator", "::"],
	"NullRange",
	["punctuation", ","],
	["keyword", "global"],
	["punctuation", ","],
	" cl",
	["operator", "::"],
	"NullRange",
	["punctuation", ","],
	["operator", "&"],
	"events",
	["punctuation", ","],
	["operator", "&"],
	"eventFilter",
	["punctuation", ")"],
	["punctuation", ";"],

	["punctuation", "}"]
]

----------------------------------------------------