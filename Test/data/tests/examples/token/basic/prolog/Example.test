:- dynamic fibo/2.
fibo(0, 1). fibo(1, 1).
fibo(N, F) :-
N >= 2, N1 is N - 1, N2 is N - 2,
fibo(N1, F1), fibo(N2, F2), F is F1 + F2,
assert(fibo(N,F):-!). % assert as first clause
----------------------------------------------------
[
	["operator", ":-"],
	" dynamic ",
	["function", "fibo/2"],
	["operator", "."],

	["function", "fibo"],
	["punctuation", "("],
	["number", "0"],
	["punctuation", ","],
	["number", "1"],
	["punctuation", ")"],
	["operator", "."],
	["function", "fibo"],
	["punctuation", "("],
	["number", "1"],
	["punctuation", ","],
	["number", "1"],
	["punctuation", ")"],
	["operator", "."],

	["function", "fibo"],
	["punctuation", "("],
	"N",
	["punctuation", ","],
	" F",
	["punctuation", ")"],
	["operator", ":-"],

	"\nN ",
	["operator", ">="],
	["number", "2"],
	["punctuation", ","],
	" N1 ",
	["operator", "is"],
	" N ",
	["operator", "-"],
	["number", "1"],
	["punctuation", ","],
	" N2 ",
	["operator", "is"],
	" N ",
	["operator", "-"],
	["number", "2"],
	["punctuation", ","],

	["function", "fibo"],
	["punctuation", "("],
	"N1",
	["punctuation", ","],
	" F1",
	["punctuation", ")"],
	["punctuation", ","],
	["function", "fibo"],
	["punctuation", "("],
	"N2",
	["punctuation", ","],
	" F2",
	["punctuation", ")"],
	["punctuation", ","],
	" F ",
	["operator", "is"],
	" F1 ",
	["operator", "+"],
	" F2",
	["punctuation", ","],

	["function", "assert"],
	["punctuation", "("],
	["function", "fibo"],
	["punctuation", "("],
	"N",
	["punctuation", ","],
	"F",
	["punctuation", ")"],
	["operator", ":-!"],
	["punctuation", ")"],
	["operator", "."],
	["comment", "% assert as first clause"]
]

----------------------------------------------------