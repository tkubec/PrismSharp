set("/CLASS/inst/paramA/state", WARN);
if (true) {
	PslDebug = -1;
}
output = execute("OS", "echo test");
if (errno) {
	print(ALARM." with errno=".errno."\n");
}
print(trim(output, "\n\r\t ", TRIM_LEADING_AND_TRAILING));
----------------------------------------------------
[
	["builtin", "set"],
	["punctuation", "("],
	["string", ["\"/CLASS/inst/paramA/state\""]],
	["punctuation", ","],
	["constant", "WARN"],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "if"],
	["punctuation", "("],
	["boolean", "true"],
	["punctuation", ")"],
	["punctuation", "{"],

	["variable", "PslDebug"],
	["operator", "="],
	["operator", "-"],
	["number", "1"],
	["punctuation", ";"],

	["punctuation", "}"],

	"\noutput ",
	["operator", "="],
	["builtin", "execute"],
	["punctuation", "("],
	["string", ["\"OS\""]],
	["punctuation", ","],
	["string", ["\"echo test\""]],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "if"],
	["punctuation", "("],
	["variable", "errno"],
	["punctuation", ")"],
	["punctuation", "{"],

	["builtin", "print"],
	["punctuation", "("],
	["constant", "ALARM"],
	["operator", "."],
	["string", ["\" with errno=\""]],
	["operator", "."],
	["variable", "errno"],
	["operator", "."],
	["string", [
		"\"",
		["symbol", "\\n"],
		"\""
	]],
	["punctuation", ")"],
	["punctuation", ";"],

	["punctuation", "}"],

	["builtin", "print"],
	["punctuation", "("],
	["builtin", "trim"],
	["punctuation", "("],
	"output",
	["punctuation", ","],
	["string", [
		"\"",
		["symbol", "\\n"],
		["symbol", "\\r"],
		["symbol", "\\t"],
		" \""
	]],
	["punctuation", ","],
	["constant", "TRIM_LEADING_AND_TRAILING"],
	["punctuation", ")"],
	["punctuation", ")"],
	["punctuation", ";"]
]

----------------------------------------------------