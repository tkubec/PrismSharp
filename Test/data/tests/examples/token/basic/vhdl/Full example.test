-- example code from: http://www.csee.umbc.edu/portal/help/VHDL/samples/samples.html
library IEEE;
use IEEE.std_logic_1164.all;

entity fadd is               -- full adder stage, interface
  port(a    : in  std_logic;
       b    : in  std_logic;
       cin  : in  std_logic;
       s    : out std_logic;
       cout : out std_logic);
end entity fadd;

architecture circuits of fadd is  -- full adder stage, body
begin  -- circuits of fadd
  s <= a xor b xor cin after 1 ns;
  cout <= (a and b) or (a and cin) or (b and cin) after 1 ns;
end architecture circuits; -- of fadd

library IEEE;
use IEEE.std_logic_1164.all;
entity add32 is             -- simple 32 bit ripple carry adder
  port(a    : in  std_logic_vector(31 downto 0);
       b    : in  std_logic_vector(31 downto 0);
       cin  : in  std_logic;
       sum  : out std_logic_vector(31 downto 0);
       cout : out std_logic);
end entity add32;

architecture circuits of add32 is
  signal c : std_logic_vector(0 to 30); -- internal carry signals
begin  -- circuits of add32
  a0: entity WORK.fadd port map(a(0), b(0), cin, sum(0), c(0));
  stage: for I in 1 to 30 generate
             as: entity WORK.fadd port map(a(I), b(I), c(I-1) , sum(I), c(I));
         end generate stage;
  a31: entity WORK.fadd port map(a(31), b(31), c(30) , sum(31), cout);
end architecture circuits;  -- of add32

use STD.textio.all;
library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_textio.all;

entity signal_trace is
end signal_trace;

architecture circuits of signal_trace is
  signal a:    std_logic_vector(31 downto 0) := x"00000000";
  signal b:    std_logic_vector(31 downto 0) := x"FFFFFFFF";
  signal cin:  std_logic := '1';
  signal cout: std_logic;
  signal sum:  std_logic_vector(31 downto 0);
begin  -- circuits of signal_trace
  adder: entity WORK.add32 port map(a, b, cin, sum, cout); -- parallel circuit

  prtsum: process (sum)
            variable my_line : LINE;
            alias swrite is write [line, string, side, width] ;
          begin
            swrite(my_line, "sum=");
            write(my_line, sum);
            swrite(my_line, ",  at=");
            write(my_line, now);
            writeline(output, my_line);
          end process prtsum;

end architecture circuits; -- of signal_trace
----------------------------------------------------
[
	["comment", "-- example code from: http://www.csee.umbc.edu/portal/help/VHDL/samples/samples.html"],

	["constant", "library"],
	" IEEE",
	["punctuation", ";"],

	["constant", "use"],
	" IEEE",
	["punctuation", "."],
	"std_logic_1164",
	["punctuation", "."],
	["keyword", "all"],
	["punctuation", ";"],

	["keyword", "entity"],
	" fadd ",
	["keyword", "is"],
	["comment", "-- full adder stage, interface"],

	["keyword", "port"],
	["punctuation", "("],
	"a    ",
	["punctuation", ":"],
	["keyword", "in"],
	"  std_logic",
	["punctuation", ";"],

	"\n       b    ",
	["punctuation", ":"],
	["keyword", "in"],
	"  std_logic",
	["punctuation", ";"],

	"\n       cin  ",
	["punctuation", ":"],
	["keyword", "in"],
	"  std_logic",
	["punctuation", ";"],

	"\n       s    ",
	["punctuation", ":"],
	["keyword", "out"],
	" std_logic",
	["punctuation", ";"],

	"\n       cout ",
	["punctuation", ":"],
	["keyword", "out"],
	" std_logic",
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "end"],
	["keyword", "entity"],
	" fadd",
	["punctuation", ";"],

	["keyword", "architecture"],
	" circuits ",
	["keyword", "of"],
	" fadd ",
	["keyword", "is"],
	["comment", "-- full adder stage, body"],

	["keyword", "begin"],
	["comment", "-- circuits of fadd"],

	"\n  s ",
	["operator", "<="],
	" a ",
	["operator", "xor"],
	" b ",
	["operator", "xor"],
	" cin ",
	["keyword", "after"],
	["number", "1"],
	" ns",
	["punctuation", ";"],

	"\n  cout ",
	["operator", "<="],
	["punctuation", "("],
	"a ",
	["operator", "and"],
	" b",
	["punctuation", ")"],
	["operator", "or"],
	["punctuation", "("],
	"a ",
	["operator", "and"],
	" cin",
	["punctuation", ")"],
	["operator", "or"],
	["punctuation", "("],
	"b ",
	["operator", "and"],
	" cin",
	["punctuation", ")"],
	["keyword", "after"],
	["number", "1"],
	" ns",
	["punctuation", ";"],

	["keyword", "end"],
	["keyword", "architecture"],
	" circuits",
	["punctuation", ";"],
	["comment", "-- of fadd"],

	["constant", "library"],
	" IEEE",
	["punctuation", ";"],

	["constant", "use"],
	" IEEE",
	["punctuation", "."],
	"std_logic_1164",
	["punctuation", "."],
	["keyword", "all"],
	["punctuation", ";"],

	["keyword", "entity"],
	" add32 ",
	["keyword", "is"],
	["comment", "-- simple 32 bit ripple carry adder"],

	["keyword", "port"],
	["punctuation", "("],
	"a    ",
	["punctuation", ":"],
	["keyword", "in"],
	["function", "std_logic_vector"],
	["punctuation", "("],
	["number", "31"],
	["keyword", "downto"],
	["number", "0"],
	["punctuation", ")"],
	["punctuation", ";"],

	"\n       b    ",
	["punctuation", ":"],
	["keyword", "in"],
	["function", "std_logic_vector"],
	["punctuation", "("],
	["number", "31"],
	["keyword", "downto"],
	["number", "0"],
	["punctuation", ")"],
	["punctuation", ";"],

	"\n       cin  ",
	["punctuation", ":"],
	["keyword", "in"],
	"  std_logic",
	["punctuation", ";"],

	"\n       sum  ",
	["punctuation", ":"],
	["keyword", "out"],
	["function", "std_logic_vector"],
	["punctuation", "("],
	["number", "31"],
	["keyword", "downto"],
	["number", "0"],
	["punctuation", ")"],
	["punctuation", ";"],

	"\n       cout ",
	["punctuation", ":"],
	["keyword", "out"],
	" std_logic",
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "end"],
	["keyword", "entity"],
	" add32",
	["punctuation", ";"],

	["keyword", "architecture"],
	" circuits ",
	["keyword", "of"],
	" add32 ",
	["keyword", "is"],

	["keyword", "signal"],
	" c ",
	["punctuation", ":"],
	["function", "std_logic_vector"],
	["punctuation", "("],
	["number", "0"],
	["keyword", "to"],
	["number", "30"],
	["punctuation", ")"],
	["punctuation", ";"],
	["comment", "-- internal carry signals"],

	["keyword", "begin"],
	["comment", "-- circuits of add32"],

	"\n  a0",
	["punctuation", ":"],
	["keyword", "entity"],
	" WORK",
	["punctuation", "."],
	"fadd ",
	["keyword", "port"],
	["keyword", "map"],
	["punctuation", "("],
	["function", "a"],
	["punctuation", "("],
	["number", "0"],
	["punctuation", ")"],
	["punctuation", ","],
	["function", "b"],
	["punctuation", "("],
	["number", "0"],
	["punctuation", ")"],
	["punctuation", ","],
	" cin",
	["punctuation", ","],
	["function", "sum"],
	["punctuation", "("],
	["number", "0"],
	["punctuation", ")"],
	["punctuation", ","],
	["function", "c"],
	["punctuation", "("],
	["number", "0"],
	["punctuation", ")"],
	["punctuation", ")"],
	["punctuation", ";"],

	"\n  stage",
	["punctuation", ":"],
	["keyword", "for"],
	" I ",
	["keyword", "in"],
	["number", "1"],
	["keyword", "to"],
	["number", "30"],
	["keyword", "generate"],

	"\n             as",
	["punctuation", ":"],
	["keyword", "entity"],
	" WORK",
	["punctuation", "."],
	"fadd ",
	["keyword", "port"],
	["keyword", "map"],
	["punctuation", "("],
	["function", "a"],
	["punctuation", "("],
	"I",
	["punctuation", ")"],
	["punctuation", ","],
	["function", "b"],
	["punctuation", "("],
	"I",
	["punctuation", ")"],
	["punctuation", ","],
	["function", "c"],
	["punctuation", "("],
	"I",
	["operator", "-"],
	["number", "1"],
	["punctuation", ")"],
	["punctuation", ","],
	["function", "sum"],
	["punctuation", "("],
	"I",
	["punctuation", ")"],
	["punctuation", ","],
	["function", "c"],
	["punctuation", "("],
	"I",
	["punctuation", ")"],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "end"],
	["keyword", "generate"],
	" stage",
	["punctuation", ";"],

	"\n  a31",
	["punctuation", ":"],
	["keyword", "entity"],
	" WORK",
	["punctuation", "."],
	"fadd ",
	["keyword", "port"],
	["keyword", "map"],
	["punctuation", "("],
	["function", "a"],
	["punctuation", "("],
	["number", "31"],
	["punctuation", ")"],
	["punctuation", ","],
	["function", "b"],
	["punctuation", "("],
	["number", "31"],
	["punctuation", ")"],
	["punctuation", ","],
	["function", "c"],
	["punctuation", "("],
	["number", "30"],
	["punctuation", ")"],
	["punctuation", ","],
	["function", "sum"],
	["punctuation", "("],
	["number", "31"],
	["punctuation", ")"],
	["punctuation", ","],
	" cout",
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "end"],
	["keyword", "architecture"],
	" circuits",
	["punctuation", ";"],
	["comment", "-- of add32"],

	["constant", "use"],
	" STD",
	["punctuation", "."],
	"textio",
	["punctuation", "."],
	["keyword", "all"],
	["punctuation", ";"],

	["constant", "library"],
	" IEEE",
	["punctuation", ";"],

	["constant", "use"],
	" IEEE",
	["punctuation", "."],
	"std_logic_1164",
	["punctuation", "."],
	["keyword", "all"],
	["punctuation", ";"],

	["constant", "use"],
	" IEEE",
	["punctuation", "."],
	"std_logic_textio",
	["punctuation", "."],
	["keyword", "all"],
	["punctuation", ";"],

	["keyword", "entity"], " signal_trace ", ["keyword", "is"],
	["keyword", "end"], " signal_trace", ["punctuation", ";"],

	["keyword", "architecture"],
	" circuits ",
	["keyword", "of"],
	" signal_trace ",
	["keyword", "is"],

	["keyword", "signal"],
	" a",
	["punctuation", ":"],
	["function", "std_logic_vector"],
	["punctuation", "("],
	["number", "31"],
	["keyword", "downto"],
	["number", "0"],
	["punctuation", ")"],
	["operator", ":="],
	["vhdl-vectors", "x\"00000000\""],
	["punctuation", ";"],

	["keyword", "signal"],
	" b",
	["punctuation", ":"],
	["function", "std_logic_vector"],
	["punctuation", "("],
	["number", "31"],
	["keyword", "downto"],
	["number", "0"],
	["punctuation", ")"],
	["operator", ":="],
	["vhdl-vectors", "x\"FFFFFFFF\""],
	["punctuation", ";"],

	["keyword", "signal"],
	" cin",
	["punctuation", ":"],
	"  std_logic ",
	["operator", ":="],
	["number", "'1'"],
	["punctuation", ";"],

	["keyword", "signal"],
	" cout",
	["punctuation", ":"],
	" std_logic",
	["punctuation", ";"],

	["keyword", "signal"],
	" sum",
	["punctuation", ":"],
	["function", "std_logic_vector"],
	["punctuation", "("],
	["number", "31"],
	["keyword", "downto"],
	["number", "0"],
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "begin"],
	["comment", "-- circuits of signal_trace"],

	"\n  adder",
	["punctuation", ":"],
	["keyword", "entity"],
	" WORK",
	["punctuation", "."],
	"add32 ",
	["keyword", "port"],
	["keyword", "map"],
	["punctuation", "("],
	"a",
	["punctuation", ","],
	" b",
	["punctuation", ","],
	" cin",
	["punctuation", ","],
	" sum",
	["punctuation", ","],
	" cout",
	["punctuation", ")"],
	["punctuation", ";"],
	["comment", "-- parallel circuit"],

	"\n\n  prtsum",
	["punctuation", ":"],
	["keyword", "process"],
	["punctuation", "("],
	"sum",
	["punctuation", ")"],

	["keyword", "variable"],
	" my_line ",
	["punctuation", ":"],
	" LINE",
	["punctuation", ";"],

	["keyword", "alias"],
	" swrite ",
	["keyword", "is"],
	" write ",
	["punctuation", "["],
	"line",
	["punctuation", ","],
	" string",
	["punctuation", ","],
	" side",
	["punctuation", ","],
	" width",
	["punctuation", "]"],
	["punctuation", ";"],

	["keyword", "begin"],

	["function", "swrite"],
	["punctuation", "("],
	"my_line",
	["punctuation", ","],
	["string", "\"sum=\""],
	["punctuation", ")"],
	["punctuation", ";"],

	["function", "write"],
	["punctuation", "("],
	"my_line",
	["punctuation", ","],
	" sum",
	["punctuation", ")"],
	["punctuation", ";"],

	["function", "swrite"],
	["punctuation", "("],
	"my_line",
	["punctuation", ","],
	["string", "\",  at=\""],
	["punctuation", ")"],
	["punctuation", ";"],

	["function", "write"],
	["punctuation", "("],
	"my_line",
	["punctuation", ","],
	" now",
	["punctuation", ")"],
	["punctuation", ";"],

	["function", "writeline"],
	["punctuation", "("],
	"output",
	["punctuation", ","],
	" my_line",
	["punctuation", ")"],
	["punctuation", ";"],

	["keyword", "end"],
	["keyword", "process"],
	" prtsum",
	["punctuation", ";"],

	["keyword", "end"],
	["keyword", "architecture"],
	" circuits",
	["punctuation", ";"],
	["comment", "-- of signal_trace"]
]

----------------------------------------------------